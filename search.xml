<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[隐藏 Android密码命令的用法]]></title>
      <url>/2017/11/01/android%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>ndroid是一个最好的和最广泛使用的移动操作系统的手机。</p>
<p>由安迪·鲁宾,经验丰富的码农,尼克·西尔斯和克里斯白在帕洛阿尔托加州开发,它已经走过了漫长的道路发展。他们原本想为相机开发软件,但意识到相机以后没有一个非常大的市场,他们继续秘密地开发“Android”——他们的竞争对手是Symbian和Windows操作系统。“我们希望智能移动设备能识别到主人的位置和喜好,”安迪·鲁宾说,他提出了Android的想法。</p>
<p>后来，谷歌收购Android,。当时,没有人知道谷歌是否会进入移动市场。自2008年以来,Android已发生过多次更新,他们已经嵌入一些命令,有经验的Android用户或者Android基本技术知识的人可以调整和玩耍。下面是代码的列表(注:通用代码应与大多数Android手机符合,然而,他们可能不会使用最新的安卓系统)。</p>
<p>免责声明:这是为有经验爱好者提供的用户信息。它不是用于基本用户、黑客或移动小偷。如果你不熟悉手机，请不要尝试任何的方法。作者不负责任何使用或滥用这些信息,包括数据丢失或硬件损坏。所以使用它的风险自己承担。</p>
</blockquote></p>
<p>o <em>#</em>#778#<em>#</em>阿=工厂数据重置</p>
<p>o <em>#</em>#I472365#<em>#</em>=开始快速GPS测试</p>
<p>o <em>#</em>#0673#<em>#</em>或<em>#</em>#0289#<em>#</em>=开始音频测试</p>
<p>o <em>#</em>#2664#<em>#</em>=触摸屏测试开始</p>
<p>o #的#273283<em>255</em>663282<em>#</em>#*=备份媒体文件</p>
<p>o <em>#</em>#0283#<em>#</em>=开始包回送测试</p>
<p>o <em>2767</em>3855#=你的手机重新安装手机固件和格式</p>
<p>o <em>#</em>#232339#<em>#</em>或<em>#</em>#526#<em>#</em>=无线局域网测试开始</p>
<p>o <em>#</em>#1575#<em>#</em>=不同GPS测试开始</p>
<p>o <em>#</em>#4636#<em>#</em>‘=显示完整的关于手机的信息</p>
<p>o <em>#</em>#2663#<em>#</em>=显示触摸屏版本</p>
<p>o <em>#</em>#232337#*#=显示蓝牙设备地址</p>
<p>o <em>#</em>#4986#<em>#*</em>2650468=显示PDA、手机硬件、射频和日期</p>
<p>o <em>#</em>#44336#<em>#</em>=显示构建时间</p>
<p>o *#06#=显示IMEI号码</p>
<p>o <em>#</em>#8255#<em>#</em>=GoogleTalk服务监测</p>
<p>o <em>#</em>#我2#<em>#</em>|<em>#</em>#2222#<em>#</em>=显示自由软件版本和硬件版本</p>
<p>o <em>#</em>#3264#<em>#</em>=显示ROMVersion</p>
<p>o ”我<em>#</em>#23233#<em>#</em>=蓝牙测试开始</p>
<p>o <em>#</em>#1234#“#”=显示PDA和手机固件信息</p>
<p>o <em>#</em>#<em>#</em>#*0=液晶显示器测试开始</p>
<p>o <em>#</em>#0842#<em>#</em>&amp;背光振动测试开始</p>
<p>o <em>#</em>#0588#<em>#</em>=显示接近传感器测试</p>
<p>o <em>#</em>#232338#<em>#</em>=显示无线Mac地址</p>
<p>o <em>#</em>#7262626#<em>#</em>=显示现场试验</p>
<p>o <em>#</em>#34971539#<em>#</em>=显示相机更新</p>
<p>o <em>#</em>#19732840#<em>#</em>=使测试模式</p>
<p>o *#06#-显示IMEI号码</p>
<p>o <em>#0</em>#-显示服务菜单(GalaxySIII+)</p>
<p>o <em>#</em>#4636#<em>#</em>-显示电话信息,使用统计电池信息</p>
<p>o <em>#</em>#34971539#<em>#</em>-显示相机的详细信息</p>
<p>o <em>#</em>#273282<em>255</em>663282<em>#</em>#*-立即AllMedia文件的备份</p>
<p>o <em>#</em>#197328640#<em>#</em>-EnablesTest模式服务</p>
<p>o <em>#</em>#232339#<em>#</em>-无线局域网测试</p>
<p>o <em>#</em>#0842#<em>#</em>-背光和振动测试</p>
<p>o <em>#</em>#2664#<em>#</em>-触摸屏测试</p>
<p>o <em>#</em>#1111#<em>#</em>-自由软件版本</p>
<p>o <em>#12580</em>369#-软件硬件信息</p>
<p>o *#9090#-诊断配置</p>
<p>o *#872564#-USB控制日志</p>
<p>o *#9900#-系统转储模式</p>
<p>o *#301279#-HSDPA/HSUPA控制菜单</p>
<p>o *#7465625#-ViewsPhone锁状态</p>
<p>o <em>#</em>#7780#<em>#</em>-重置数据分区工厂状态</p>
<p>o <em>2767</em>3855#-FormatsDevice出厂状态(将会删除所有的电话吗)</p>
<p>o ##7764726-隐藏服务菜单(一些摩托罗拉Droid系列)</p>
<p>o <em>#</em>#7594#<em>#</em>-EnablesDirect供电的设备</p>
<p>o <em>#</em>#273283<em>255</em>663282<em>#</em>#*快速备份所有的媒体文件在你的Android设备</p>
<p>o <em>#</em>#232338#<em>#</em>-显示无线MAC地址</p>
<p>o <em>#</em>#1472365#<em>#</em>-执行一个快速GPS测试</p>
<p>o <em>#</em>#1575#<em>#</em>,更先进的GPS测试</p>
<p>o <em>#</em>#0283#<em>#</em>-执行包回送测试</p>
<p>o <em>#</em>#0<em>#</em>#*-液晶显示器测试运行</p>
<p>o <em>#</em>#0289#<em>#</em>-Runsan音频测试</p>
<p>o <em>#</em>#2663#<em>#</em>-ShowsDevice触摸屏版本</p>
<p>o <em>#</em>#0588#<em>#</em>-执行一个接近传感器测试</p>
<p>o <em>#</em>#3264#<em>#</em>-显示RAM的版本</p>
<p>o <em>#</em>#232331#<em>#</em>-蓝牙测试运行</p>
<p>o <em>#</em>#232337#*#-显示设备的蓝牙地址</p>
<p>o <em>#</em>#7262626#<em>#</em>-执行现场试验</p>
<p>o <em>#</em>#8255#<em>#</em>-监视器GoogleTalk服务</p>
<p>o <em>#</em>#4986<em>2650468#</em>#*-显示手机,硬件、PDA、射频调用日期&amp;固件信息</p>
<p>o <em>#</em>#1234#<em>#</em>-显示PDA和手机固件信息</p>
<p>o <em>#</em>#2222#<em>#</em>-显示硬件版本之间的自由贸易协定</p>
<p>o <em>#</em>#44336#<em>#</em>-显示了构建时间改变号码列表</p>
<p>o <em>#</em>#8351#<em>#</em>-使语音拨号日志模式</p>
<p>o <em>#</em>#8350#<em>#</em>-禁用语音拨号日志模式</p>
<p>o ##778(+电话)-显示EPST菜单</p>
<p>o <em>#</em>#7594#<em>#</em>-EnablesDirect供电的设备</p>
<p>o <em>#</em>#232338#<em>#</em>-显示无线MAC地址</p>
<p>o <em>#</em>#3424#<em>#</em>-HTC功能测试程序运行</p>
<p>o ##786#,逆向物流的支持<br>o ##3282#-显示EPST菜单</p>
<p>o ##3424#-RunsDiagnostic模式</p>
<p>o <em>#</em>#8255#<em>#</em>-推出GoogleTalk服务监测</p>
<p>o ##33284#-PerformsField测试</p>
<p>o ##8626337#-声码器运行</p>
<p>o <em>#</em>#4636#<em>#</em>-显示HTC信息菜单</p>
]]></content>
      
        <categories>
            
            <category> 自言自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[浏览器对象]]></title>
      <url>/2017/10/27/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AF%B9%E8%B1%A1/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>JavaScript可以获取浏览器提供的很多对象，并进行操作。</p>
</blockquote></p>
<h4 id="window对象"><a href="#window对象" class="headerlink" title="window对象"></a>window对象</h4><pre><code>window.innerWidth：浏览器窗口内部宽度
window.innerHeight：浏览器窗口内部高度
</code></pre><p>内部宽高是指除去菜单栏、工具栏、边框等占位元素后，用于显示网页的净宽高。</p>
<p>注意—-兼容性：IE&lt;=8不支持。</p>
<h4 id="navigator对象"><a href="#navigator对象" class="headerlink" title="navigator对象"></a>navigator对象</h4><pre><code>navigator.appName：浏览器名称；
navigator.appVersion：浏览器版本；
navigator.language：浏览器设置的语言；
navigator.platform：操作系统类型；
navigator.userAgent：浏览器设定的User-Agent字符串。
</code></pre><h4 id="screen对象"><a href="#screen对象" class="headerlink" title="screen对象"></a>screen对象</h4><pre><code>screen.width：屏幕宽度，以像素为单位；
screen.height：屏幕高度，以像素为单位；
screen.colorDepth：返回颜色位数，如8、16、24。
</code></pre><h4 id="location对象"><a href="#location对象" class="headerlink" title="location对象"></a>location对象</h4><pre><code>location.href:  &#39;http://www.example.com:8080/path/index.html?a=1&amp;b=2#TOP&#39;
location.protocol： &#39;http&#39;
location.host： &#39;www.example.com&#39;
location.port： &#39;8080&#39;
location.pathname： &#39;/path/index.html&#39;
location.search： &#39;?a=1&amp;b=2&#39;
location.hash： &#39;TOP&#39;


location.assign()     //加载一个新的界面
location.reload()     //重新加载当前界面
</code></pre><h4 id="document"><a href="#document" class="headerlink" title="document"></a>document</h4><pre><code>document.title    //网页标题栏得内容
document.getElementById
document.getElementsByTagName
document.createElement(&#39;p&#39;);
document.cookie
</code></pre><h4 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h4><pre><code>D.innerHTML     //可以插入标签
D.innerText     //不返回隐藏元素的文本
D.innerContent  //返回所有文本
D.style.color = &#39;red&#39;  //修改样式
parentElement.appendChild(newElement)   //把一个子节点添加到父节点的最后一个子节点
parentElement.insertBefore(newElement, referenceElement);     //子节点会插入到referenceElement之前。

parentElement.removeChild(Child)   //获得该节点本身以及它的父节点，然后，调用父节点的removeChild把自己删掉：
</code></pre>]]></content>
      
        <categories>
            
            <category> HTML </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[编写Jquery插件]]></title>
      <url>/2017/10/26/%E7%BC%96%E5%86%99jquery%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>本文仅仅通过一个代码高亮的插件例子来说明</p>
</blockquote></p>
<h4 id="第一个扩展——highlight1"><a href="#第一个扩展——highlight1" class="headerlink" title="第一个扩展——highlight1()"></a>第一个扩展——highlight1()</h4><p>给jQuery对象绑定一个新方法是通过扩展$.fn对象实现的。让我们来编写第一个扩展——highlight1()：</p>
<pre><code>$.fn.highlight1 = function () {
    // this已绑定为当前jQuery对象:
    this.css(&#39;backgroundColor&#39;, &#39;#fffceb&#39;).css(&#39;color&#39;, &#39;#d85030&#39;);
    return this;
}
</code></pre><p>注意到函数内部的this在调用时被绑定为jQuery对象，所以函数内部代码可以正常调用所有jQuery对象的方法</p>
<p>细心的童鞋可能发现了，为什么最后要return this;？因为jQuery对象支持链式操作，我们自己写的扩展方法也要能继续链式下去：</p>
<pre><code>$(&#39;span.hl&#39;).highlight1().slideDown();
</code></pre><h4 id="第一个扩展——highlight1-1"><a href="#第一个扩展——highlight1-1" class="headerlink" title="第一个扩展——highlight1()"></a>第一个扩展——highlight1()</h4><p>不然，用户调用的时候，就不得不把上面的代码拆成两行。</p>
<p>但是这个版本并不完美。有的用户希望高亮的颜色能自己来指定，怎么办？</p>
<p>我们可以给方法加个参数，让用户自己把参数用对象传进去。于是我们有了第二个版本的highlight2()：</p>
<pre><code>$.fn.highlight2 = function (options) {
    // 要考虑到各种情况:
    // options为undefined
    // options只有部分key
    var bgcolor = options &amp;&amp; options.backgroundColor || &#39;#fffceb&#39;;
    var color = options &amp;&amp; options.color || &#39;#d85030&#39;;
    this.css(&#39;backgroundColor&#39;, bgcolor).css(&#39;color&#39;, color);
    return this;
}
</code></pre><p>对于默认值的处理，我们用了一个简单的&amp;&amp;和||短路操作符，总能得到一个有效的值。</p>
<p>另一种方法是使用jQuery提供的辅助方法$.extend(target, obj1, obj2, …)，它把多个object对象的属性合并到第一个target对象中，遇到同名属性，总是使用靠后的对象的值，也就是越往后优先级越高：</p>
<pre><code>// 把默认值和用户传入的options合并到对象{}中并返回:
var opts = $.extend({}, {
    backgroundColor: &#39;#00a8e6&#39;,
    color: &#39;#ffffff&#39;
}, options);
</code></pre><h4 id="最终版的highlight"><a href="#最终版的highlight" class="headerlink" title="最终版的highlight()"></a>最终版的highlight()</h4><p>紧接着用户对highlight2()提出了意见：每次调用都需要传入自定义的设置，能不能让我自己设定一个缺省值，以后的调用统一使用无参数的highlight2()？</p>
<p>也就是说，我们设定的默认值应该能允许用户修改。</p>
<p>那默认值放哪比较合适？放全局变量肯定不合适，最佳地点是$.fn.highlight2这个函数对象本身。</p>
<p>于是最终版的highlight()终于诞生了：</p>
<pre><code>$.fn.highlight = function (options) {
    // 合并默认值和用户设定值:
    var opts = $.extend({}, $.fn.highlight.defaults, options);
    this.css(&#39;backgroundColor&#39;, opts.backgroundColor).css(&#39;color&#39;, opts.color);
    return this;
}

// 设定默认值:
$.fn.highlight.defaults = {
    color: &#39;#d85030&#39;,
    backgroundColor: &#39;#fff8de&#39;
}
</code></pre><p>这次用户终于满意了。用户使用时，只需一次性设定默认值：</p>
<pre><code>$.fn.highlight.defaults.color = &#39;#fff&#39;;
$.fn.highlight.defaults.backgroundColor = &#39;#000&#39;;
</code></pre><p>然后就可以非常简单地调用highlight()了。</p>
<p>最终，我们得出编写一个jQuery插件的原则：</p>
<pre><code>1. 给$.fn绑定函数，实现插件的代码逻辑；
2. 插件函数最后要return this;以支持链式调用；
3. 插件函数要有默认值，绑定在$.fn.&lt;pluginName&gt;.defaults上；
4. 用户在调用时可传入设定值以便覆盖默认值。
</code></pre>]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[少走弯路的10条忠告]]></title>
      <url>/2017/10/25/%E5%B0%91%E8%B5%B0%E5%BC%AF%E8%B7%AF/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>少走弯路的10条忠告</p>
</blockquote></p>
<h4 id="1、买个闹钟-以便按时叫醒你"><a href="#1、买个闹钟-以便按时叫醒你" class="headerlink" title="1、买个闹钟, 以便按时叫醒你"></a>1、买个闹钟, 以便按时叫醒你</h4><pre><code>贪睡和不守时, 都将成为你工作和事业上的绊脚石, 任何时候都一样。 不仅要学会准时, 更要学会提前。

就如你坐车去某地, 沿途的风景很美, 你忍不住下车看一看, 后来虽然你还是赶到了某地, 却不是准时到达。 闹钟只是一种简单的标志和提示, 真正灵活、实用的时间, 掌握在每个人的心中。
</code></pre><h4 id="2、如果你不喜欢现在的工作-要么辞职不干-要么就闭嘴不言"><a href="#2、如果你不喜欢现在的工作-要么辞职不干-要么就闭嘴不言" class="headerlink" title="2、如果你不喜欢现在的工作, 要么辞职不干, 要么就闭嘴不言"></a>2、如果你不喜欢现在的工作, 要么辞职不干, 要么就闭嘴不言</h4><pre><code>初出茅庐, 往往眼高手低, 心高气傲, 大事做不了, 小事不愿做。

不要养成挑三拣四的习惯。不要雨天烦打伞, 不带伞又怕淋雨, 处处表现出不满的情绪。 记住, 不做则已, 要做就要做好。
</code></pre><h4 id="3、每个人都有孤独的时候"><a href="#3、每个人都有孤独的时候" class="headerlink" title="3、每个人都有孤独的时候"></a>3、每个人都有孤独的时候</h4><pre><code>要学会忍受孤独, 这样才会成熟起来。

年轻人嘻嘻哈哈、打打闹闹惯了, 到了一个陌生的环境, 面对形形色色的任何事, 一下子不知所措起来, 有时连一个可以倾心说话的地方也没有。 这时, 千万别浮躁, 学会静心, 学会忍受孤独。 在孤独中思考, 在思考中成熟, 在成熟中升华。 不要因为寂寞而乱了方寸, 而去做无聊无益的事情, 白白浪费了宝贵的时间。
</code></pre><h4 id="4、走运时要做好倒霉的准备"><a href="#4、走运时要做好倒霉的准备" class="headerlink" title="4、走运时要做好倒霉的准备"></a>4、走运时要做好倒霉的准备</h4><pre><code>有一天, 一只狐狸走到一个葡萄园外, 看见里面水灵灵的葡萄垂涎欲滴。 可会死外面有栅栏挡着, 无法进去。 于是它一狠心绝食三日, 减肥之后, 终于钻进葡萄园内饱餐一顿。 当它心满意足想离开葡萄园时, 发觉自己吃得太饱, 怎么也钻不出栅栏了。

相信任何人都不愿做这样的狐狸。

退路同样重要。 饱带干粮, 晴带雨伞, 点滴积累, 水到渠成。 有的东西今天似乎一文不值, 但有朝一日也许就会身价百倍。
</code></pre><h4 id="5、不要像玻璃那样脆弱"><a href="#5、不要像玻璃那样脆弱" class="headerlink" title="5、不要像玻璃那样脆弱"></a>5、不要像玻璃那样脆弱</h4><pre><code>有的人眼睛总盯着自己, 所以长不高看不远；总是喜欢怨天尤人, 也使别人无比厌烦。 没有苦中苦, 哪来甜中甜？不要像玻璃那样脆弱, 而应像水晶一样透明, 太阳一样辉煌, 腊梅一样坚强。 既然睁开眼睛享受风的清凉, 就不要埋怨风中细小的沙粒。
</code></pre><h4 id="6、管住自己的嘴巴"><a href="#6、管住自己的嘴巴" class="headerlink" title="6、管住自己的嘴巴"></a>6、管住自己的嘴巴</h4><pre><code>不要谈论自己, 更不要议论别人。 谈论自己往往会自大虚伪, 在名不副实中失去自己。 议论别人往往陷入鸡毛蒜皮的是非口舌中纠缠不清。

每天下班后和你的那些同事朋友喝酒聊天可不是件好事, 因为, 这中间往往会把议论同事、朋友当做话题。 背后议论别人总是不好的, 尤其是议论别人的短处, 这些会降低你的人格。
</code></pre><h4 id="7、机会从不会“失掉”-你失掉了-自有别人会得到"><a href="#7、机会从不会“失掉”-你失掉了-自有别人会得到" class="headerlink" title="7、机会从不会“失掉”, 你失掉了, 自有别人会得到"></a>7、机会从不会“失掉”, 你失掉了, 自有别人会得到</h4><pre><code>不要凡事在天, 守株待兔, 更不要寄希望于“机会”。 机会只不过是相对于充分准备而有善于创造机会的人而言的。

也许, 你正为失去一个机会而懊悔、埋怨的时候, 机会正被你对面那个同样的“倒霉鬼”给抓住了。 没有机会, 就要创造机会, 有了机会, 就要巧妙地抓住。
</code></pre><h4 id="8、若电话老是不响-你该打出去"><a href="#8、若电话老是不响-你该打出去" class="headerlink" title="8、若电话老是不响, 你该打出去"></a>8、若电话老是不响, 你该打出去</h4><pre><code>很多时候, 电话会给你带来意想不到的收获, 它不是花瓶仅仅成为一种摆设。 交了新朋友, 别忘了老朋友, 朋友多了路好走。 交际的一大诀窍就是主动。 好的人缘好的口碑, 往往助你的事业更上一个台阶。
</code></pre><h4 id="9、千万不要因为自己已经到了结婚年龄而草率结婚"><a href="#9、千万不要因为自己已经到了结婚年龄而草率结婚" class="headerlink" title="9、千万不要因为自己已经到了结婚年龄而草率结婚"></a>9、千万不要因为自己已经到了结婚年龄而草率结婚</h4><pre><code>想结婚, 就要找一个能和你心心相印、相辅相携的伴侣。 不要因为放纵和游戏而恋爱, 不要因为恋爱而影响工作和事业, 更不要因一桩草率而失败的婚姻而使人生受阻。 感情用事往往会因小失大。
</code></pre><h4 id="10、写出你一生要做的事情-把单子放在皮夹里-经常拿出来看看"><a href="#10、写出你一生要做的事情-把单子放在皮夹里-经常拿出来看看" class="headerlink" title="10、写出你一生要做的事情, 把单子放在皮夹里, 经常拿出来看看"></a>10、写出你一生要做的事情, 把单子放在皮夹里, 经常拿出来看看</h4><pre><code>人生要有目标, 要有计划, 要有提醒, 要有紧迫感。 一个又一个小目标串起来, 就成了你一生的大目标。 生活富足了, 环境改善了, 不要忘记了皮夹里那张看似薄薄的单子。
</code></pre>]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[head标签中的琐事]]></title>
      <url>/2017/10/24/head%E6%A0%87%E7%AD%BE/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>一份关于任何可以写入到你的文档中 <head> 部分的清单。</head></p>
</blockquote></p>
<h4 id="最小推荐"><a href="#最小推荐" class="headerlink" title="最小推荐"></a>最小推荐</h4><p>下面是基本的、最低限度的网站基本标签：</p>
<pre><code>&lt;meta charset=&quot;utf-8&quot;&gt;
&lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;&gt;
&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;
&lt;!-- 以上 3 个 meta 标签 *必须* 放在 head 的最前面；其他任何的 head 内容必须在这些标签的 *后面* --&gt;
&lt;title&gt;页面标题&lt;/title&gt;
</code></pre><h4 id="网页元素"><a href="#网页元素" class="headerlink" title="网页元素"></a>网页元素</h4><pre><code>&lt;!-- 文档标题 --&gt;
&lt;title&gt;页面标题&lt;/title&gt;

&lt;!-- 基本 URL 作用于文档中所包含的所有相对 URL --&gt;
&lt;base href=&quot;https://example.com/page.html&quot;&gt;

&lt;!-- 外部的 CSS --&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;

&lt;!-- 文档内的 CSS --&gt;
&lt;style&gt;
  /* ... */
&lt;/style&gt;

&lt;!-- JavaScript --&gt;
&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;
&lt;noscript&gt;&lt;!--无 JS 时的替代--&gt;&lt;/noscript&gt;
</code></pre><h4 id="Meta-标签"><a href="#Meta-标签" class="headerlink" title="Meta 标签"></a>Meta 标签</h4><pre><code>
&lt;!-- 设置文档的字符编码 --&gt;
&lt;meta charset=&quot;utf-8&quot;&gt;
&lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;&gt;
&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;
&lt;!-- 以上 3 个 meta 标签 *必须* 放在 head 的最前面；其他任何的 head 内容必须在这些标签的 *后面* --&gt;

&lt;!-- 允许控制资源的过度加载 --&gt;
&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;default-src &#39;self&#39;&quot;&gt;
&lt;!-- 尽早地放置在文档中 --&gt;
&lt;!-- 仅应用于该标签下的内容 --&gt;

&lt;!-- Web 应用的名称（仅当网站被用作为一个应用时才使用）--&gt;
&lt;meta name=&quot;application-name&quot; content=&quot;应用名称&quot;&gt;

&lt;!-- 针对页面的简短描述（限制 150 字符）--&gt;
&lt;!-- 在*某些*情况下，该描述是被用作搜索结果展示片段的一部分 --&gt;
&lt;meta name=&quot;description&quot; content=&quot;一个页面描述&quot;&gt;

&lt;!-- 控制搜索引擎的抓取和索引行为 --&gt;
&lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;&gt;&lt;!-- 所有搜索引擎 --&gt;
&lt;meta name=&quot;googlebot&quot; content=&quot;index,follow&quot;&gt;&lt;!-- 仅对 Google 有效 --&gt;

&lt;!-- 告诉 Google 不显示网站链接的搜索框 --&gt;
&lt;meta name=&quot;google&quot; content=&quot;nositelinkssearchbox&quot;&gt;

&lt;!-- 告诉 Google 不提供此页面的翻译 --&gt;
&lt;meta name=&quot;google&quot; content=&quot;notranslate&quot;&gt;

&lt;!-- 验证 Google 搜索控制台的所有权 --&gt;
&lt;meta name=&quot;google-site-verification&quot; content=&quot;verification_token&quot;&gt;

&lt;!-- 验证 Yandex 网站管理员的所有权 --&gt;
&lt;meta name=&quot;yandex-verification&quot; content=&quot;verification_token&quot;&gt;

&lt;!-- 验证 Bing 网站管理员中心的所有权 --&gt;
&lt;meta name=&quot;msvalidate.01&quot; content=&quot;verification_token&quot;&gt;

&lt;!-- 验证 Alexa 控制台的所有权 --&gt;
&lt;meta name=&quot;alexaVerifyID&quot; content=&quot;verification_token&quot;&gt;
&lt;!-- 验证 Pinterest 控制台的所有权 --&gt;
&lt;meta name=&quot;p:domain_verify&quot; content=&quot;code from pinterest&quot;&gt;

&lt;!-- 验证 Norton 安全站点的所有权 --&gt;
&lt;meta name=&quot;norton-safeweb-site-verification&quot; content=&quot;norton code&quot;&gt;

&lt;!-- 用来命名软件或用于构建网页（如 - WordPress、Dreamweaver）--&gt;
&lt;meta name=&quot;generator&quot; content=&quot;program&quot;&gt;

&lt;!-- 关于你的网站主题的简短描述 --&gt;
&lt;meta name=&quot;subject&quot; content=&quot;你的网站主题&quot;&gt;

&lt;!-- 基于网站内容给出一般的年龄分级 --&gt;
&lt;meta name=&quot;rating&quot; content=&quot;General&quot;&gt;

&lt;!-- 允许控制 referrer 信息如何传递 --&gt;
&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;!-- 禁用自动检测和格式化可能的电话号码 --&gt;
&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;

&lt;!-- 通过设置为 “off” 完全退出 DNS 预取 --&gt;
&lt;meta http-equiv=&quot;x-dns-prefetch-control&quot; content=&quot;off&quot;&gt;

&lt;!-- 在客户端存储 cookie，web 浏览器的客户端识别 --&gt;
&lt;meta http-equiv=&quot;set-cookie&quot; content=&quot;name=value; expires=date; path=url&quot;&gt;

&lt;!-- 指定要显示在一个特定框架中的页面 --&gt;
&lt;meta http-equiv=&quot;Window-Target&quot; content=&quot;_value&quot;&gt;

&lt;!-- 地理标签 --&gt;
&lt;meta name=&quot;ICBM&quot; content=&quot;latitude, longitude&quot;&gt;
&lt;meta name=&quot;geo.position&quot; content=&quot;latitude;longitude&quot;&gt;
&lt;meta name=&quot;geo.region&quot; content=&quot;country[-state]&quot;&gt;&lt;!-- 国家代码 (ISO 3166-1): 强制性, 州代码 (ISO 3166-2): 可选; 如 content=&quot;US&quot; / content=&quot;US-NY&quot; --&gt;
&lt;meta name=&quot;geo.placename&quot; content=&quot;city/town&quot;&gt;&lt;!-- 如 content=&quot;New York City&quot; --&gt;
</code></pre><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><pre><code>&lt;!-- 表明一个 CSS 样式表 --&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://example.com/styles.css&quot;&gt;

&lt;!-- 有助于防止出现内容重复的问题 --&gt;
&lt;link rel=&quot;canonical&quot; href=&quot;https://example.com/2010/06/9-things-to-do-before-entering-social-media.html&quot;&gt;

&lt;!-- 之前用于包含 icon 链接，但已被废弃并不再使用 --&gt;
&lt;link rel=&quot;shortlink&quot; href=&quot;https://example.com/?p=42&quot;&gt;

&lt;!-- 链接到当前文档的一个 AMP HTML 版本 --&gt;
&lt;link rel=&quot;amphtml&quot; href=&quot;https://example.com/path/to/amp-version.html&quot;&gt;

&lt;!-- 链接到一个指定 Web 应用程序“安装”证书的 JSON 文件 --&gt;
&lt;link rel=&quot;manifest&quot; href=&quot;manifest.json&quot;&gt;

&lt;!-- 链接到文档的作者 --&gt;
&lt;link rel=&quot;author&quot; href=&quot;humans.txt&quot;&gt;

&lt;!-- 指向一个适用于链接内容的版权申明 --&gt;
&lt;link rel=&quot;license&quot; href=&quot;copyright.html&quot;&gt;

&lt;!-- 给出可能的你的另一种语言的文档位置参考 --&gt;
&lt;link rel=&quot;alternate&quot; href=&quot;https://es.example.com/&quot; hreflang=&quot;es&quot;&gt;

&lt;!-- 提供了关于作者或其他人的信息 --&gt;
&lt;link rel=&quot;me&quot; href=&quot;https://google.com/profiles/thenextweb&quot; type=&quot;text/html&quot;&gt;
&lt;link rel=&quot;me&quot; href=&quot;mailto:name@example.com&quot;&gt;
&lt;link rel=&quot;me&quot; href=&quot;sms:+15035550125&quot;&gt;

&lt;!-- 链接到一个描述历史记录、文档或其他具有历史意义的材料的集合的文档。 --&gt;
&lt;link rel=&quot;archives&quot; href=&quot;https://example.com/archives/&quot;&gt;

&lt;!-- 链接到层次结构中的顶级资源 --&gt;
&lt;link rel=&quot;index&quot; href=&quot;https://example.com/&quot;&gt;

&lt;!-- 给出一个自我参考 - 当文档有多个可能的参考时非常有用 --&gt;
&lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://example.com/atomFeed.php?page=3&quot;&gt;

&lt;!-- 分别是在一系列文件中的第一个、下一个、上一个和最后一个 --&gt;
&lt;link rel=&quot;first&quot; href=&quot;https://example.com/atomFeed.php&quot;&gt;
&lt;link rel=&quot;next&quot; href=&quot;https://example.com/atomFeed.php?page=4&quot;&gt;
&lt;link rel=&quot;prev&quot; href=&quot;https://example.com/atomFeed.php?page=2&quot;&gt;
&lt;link rel=&quot;last&quot; href=&quot;https://example.com/atomFeed.php?page=147&quot;&gt;

&lt;!-- 当使用第三方服务来维护 blog 时使用 --&gt;
&lt;link rel=&quot;EditURI&quot; href=&quot;https://example.com/xmlrpc.php?rsd&quot; type=&quot;application/rsd+xml&quot; title=&quot;RSD&quot;&gt;

&lt;!-- 当另一个 WordPress 博客链接到你的 WordPress 博客或文章时形成一个自动化的评论 --&gt;
&lt;link rel=&quot;pingback&quot; href=&quot;https://example.com/xmlrpc.php&quot;&gt;

&lt;!-- 当你在自己的页面上链接到一个 url 时通知它 --&gt;
&lt;link rel=&quot;webmention&quot; href=&quot;https://example.com/webmention&quot;&gt;

&lt;!-- 加载一个外部的 HTML 文件到当前 HTML 文件中 --&gt;
&lt;link rel=&quot;import&quot; href=&quot;/path/to/component.html&quot;&gt;

&lt;!-- 打开搜索 --&gt;
&lt;link rel=&quot;search&quot; href=&quot;/open-search.xml&quot; type=&quot;application/opensearchdescription+xml&quot; title=&quot;Search Title&quot;&gt;

&lt;!-- Feeds --&gt;
&lt;link rel=&quot;alternate&quot; href=&quot;https://feeds.feedburner.com/example&quot; type=&quot;application/rss+xml&quot; title=&quot;RSS&quot;&gt;
&lt;link rel=&quot;alternate&quot; href=&quot;https://example.com/feed.atom&quot; type=&quot;application/atom+xml&quot; title=&quot;Atom 0.3&quot;&gt;

&lt;!-- 预取，预载，预浏览 --&gt;
&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//example.com/&quot;&gt;
&lt;link rel=&quot;preconnect&quot; href=&quot;https://www.example.com/&quot;&gt;
&lt;link rel=&quot;prefetch&quot; href=&quot;https://www.example.com/&quot;&gt;
&lt;link rel=&quot;prerender&quot; href=&quot;https://example.com/&quot;&gt;
&lt;link rel=&quot;preload&quot; href=&quot;image.png&quot; as=&quot;image&quot;&gt;
&lt;!-- 更多信息：https://css-tricks.com/prefetching-preloading-prebrowsing/ --&gt;
</code></pre><h4 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h4><pre><code>&lt;!-- 针对 IE 10 及以下版本 --&gt;
&lt;!-- 如果将 `favicon.ico` 放在根目录下，则无需标签 --&gt;

&lt;!-- 对于 IE 11、Chrome、Firefox、Safari 和 Opera --&gt;
&lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;16x16&quot; href=&quot;/path/to/favicon-16x16.png&quot;&gt;
&lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;32x32&quot; href=&quot;/path/to/favicon-32x32.png&quot;&gt;
&lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;96x96&quot; href=&quot;/path/to/favicon-96x96.png&quot;&gt;
&lt;!-- 更多信息: https://bitsofco.de/all-about-favicons-and-touch-icons/ --&gt;
</code></pre><h4 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h4><pre><code>&lt;meta property=&quot;fb:app_id&quot; content=&quot;123456789&quot;&gt;
&lt;meta property=&quot;og:url&quot; content=&quot;https://example.com/page.html&quot;&gt;
&lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;
&lt;meta property=&quot;og:title&quot; content=&quot;Content Title&quot;&gt;
&lt;meta property=&quot;og:image&quot; content=&quot;https://example.com/image.jpg&quot;&gt;
&lt;meta property=&quot;og:description&quot; content=&quot;Description Here&quot;&gt;
&lt;meta property=&quot;og:site_name&quot; content=&quot;Site Name&quot;&gt;
&lt;meta property=&quot;og:locale&quot; content=&quot;en_US&quot;&gt;
&lt;meta property=&quot;article:author&quot; content=&quot;&quot;&gt;
</code></pre><h4 id="Facebook-Instant-Articles"><a href="#Facebook-Instant-Articles" class="headerlink" title="Facebook Instant Articles"></a>Facebook Instant Articles</h4><pre><code>&lt;meta charset=&quot;utf-8&quot;&gt;
&lt;meta property=&quot;op:markup_version&quot; content=&quot;v1.0&quot;&gt;

&lt;!-- 你的文章的 Web 版网址 --&gt;
&lt;link rel=&quot;canonical&quot; href=&quot;http://example.com/article.html&quot;&gt;

&lt;!-- 用于该文章的样式 --&gt;
&lt;meta property=&quot;fb:article_style&quot; content=&quot;myarticlestyle&quot;&gt;
</code></pre><h4 id="Twitter-Cards"><a href="#Twitter-Cards" class="headerlink" title="Twitter Cards"></a>Twitter Cards</h4><pre><code>&lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot;&gt;
&lt;meta name=&quot;twitter:site&quot; content=&quot;@site_account&quot;&gt;
&lt;meta name=&quot;twitter:creator&quot; content=&quot;@individual_account&quot;&gt;
&lt;meta name=&quot;twitter:url&quot; content=&quot;https://example.com/page.html&quot;&gt;
&lt;meta name=&quot;twitter:title&quot; content=&quot;Content Title&quot;&gt;
&lt;meta name=&quot;twitter:description&quot; content=&quot;Content description less than 200 characters&quot;&gt;
&lt;meta name=&quot;twitter:image&quot; content=&quot;https://example.com/image.jpg&quot;&gt;
</code></pre><h4 id="Google-Schema-org"><a href="#Google-Schema-org" class="headerlink" title="Google+ / Schema.org"></a>Google+ / Schema.org</h4><pre><code>&lt;link href=&quot;https://plus.google.com/+YourPage&quot; rel=&quot;publisher&quot;&gt;
&lt;meta itemprop=&quot;name&quot; content=&quot;内容标题&quot;&gt;
&lt;meta itemprop=&quot;description&quot; content=&quot;内容描述少于 200 个字符&quot;&gt;
&lt;meta itemprop=&quot;image&quot; content=&quot;https://example.com/image.jpg&quot;&gt;
</code></pre><h4 id="Pinterest"><a href="#Pinterest" class="headerlink" title="Pinterest"></a>Pinterest</h4><p>根据他们的帮助中心可知，Pinterest 允许你禁止他人保存你网站里的内容。description 为可选。</p>
<pre><code>&lt;meta name=&quot;pinterest&quot; content=&quot;nopin&quot; description=&quot;Sorry, you can&#39;t save from my website!&quot;&gt;
</code></pre><h4 id="OEmbed"><a href="#OEmbed" class="headerlink" title="OEmbed"></a>OEmbed</h4><pre><code>&lt;link rel=&quot;alternate&quot; type=&quot;application/json+oembed&quot;
  href=&quot;http://example.com/services/oembed?url=http%3A%2F%2Fexample.com%2Ffoo%2F&amp;amp;format=json&quot;
  title=&quot;oEmbed Profile: JSON&quot;&gt;
&lt;link rel=&quot;alternate&quot; type=&quot;text/xml+oembed&quot;
  href=&quot;http://example.com/services/oembed?url=http%3A%2F%2Fexample.com%2Ffoo%2F&amp;amp;format=xml&quot;
  title=&quot;oEmbed Profile: XML&quot;&gt;
</code></pre><h4 id="浏览器-平台"><a href="#浏览器-平台" class="headerlink" title="浏览器 / 平台"></a>浏览器 / 平台</h4><h5 id="Apple-iOS"><a href="#Apple-iOS" class="headerlink" title="Apple iOS"></a>Apple iOS</h5><pre><code>&lt;!-- 智能应用 Banner --&gt;
&lt;meta name=&quot;apple-itunes-app&quot; content=&quot;app-id=APP_ID,affiliate-data=AFFILIATE_ID,app-argument=SOME_TEXT&quot;&gt;

&lt;!-- 禁用自动检测和格式化可能的电话号码 --&gt;
&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;

&lt;!-- 添加到主屏幕 --&gt;
&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;
&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot;&gt;
&lt;meta name=&quot;apple-mobile-web-app-title&quot; content=&quot;应用标题&quot;&gt;

&lt;!-- 触摸图标 --&gt;
&lt;!-- 在大多数情况下，在 `&lt;head&gt;` 中，一个 180×180px 触摸图标就已经足够了 --&gt;
&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;/path/to/apple-touch-icon.png&quot;&gt;
&lt;!-- 注意：iOS 7 上的 Safari 不会对图标产生效果。 --&gt;
&lt;!-- 较早版本的 Safari 不会对以 `-precomposed.png` 后缀命名的图标文件产生效果。 --&gt;

&lt;!-- 启动画面（已无效） --&gt;
&lt;link rel=&quot;apple-touch-startup-image&quot; href=&quot;path/to/startup.png&quot;&gt;

&lt;!-- iOS 应用深层链接 --&gt;
&lt;meta name=&quot;apple-itunes-app&quot; content=&quot;app-id=APP-ID, app-argument=http/url-sample.com&quot;&gt;
&lt;link rel=&quot;alternate&quot; href=&quot;ios-app://APP-ID/http/url-sample.com&quot;&gt;
</code></pre><h5 id="Apple-Safari"><a href="#Apple-Safari" class="headerlink" title="Apple Safari"></a>Apple Safari</h5><pre><code>&lt;!-- 固定网站 --&gt;
&lt;link rel=&quot;mask-icon&quot; href=&quot;path/to/icon.svg&quot; color=&quot;red&quot;&gt;
</code></pre><h5 id="Google-Android"><a href="#Google-Android" class="headerlink" title="Google Android"></a>Google Android</h5><pre><code>&lt;meta name=&quot;theme-color&quot; content=&quot;#E64545&quot;&gt;

&lt;!-- 添加到主屏幕 --&gt;
&lt;meta name=&quot;mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;
&lt;!-- 更多信息：https://developer.chrome.com/multidevice/android/installtohomescreen --&gt;
</code></pre><h5 id="Google-Chrome"><a href="#Google-Chrome" class="headerlink" title="Google Chrome"></a>Google Chrome</h5><pre><code>&lt;link rel=&quot;chrome-webstore-item&quot; href=&quot;https://chrome.google.com/webstore/detail/APP_ID&quot;&gt;

&lt;!-- 禁用翻译提示 --&gt;
&lt;meta name=&quot;google&quot; content=&quot;notranslate&quot;&gt;
</code></pre><h5 id="Google-Chrome-Mobile-只针对-Android"><a href="#Google-Chrome-Mobile-只针对-Android" class="headerlink" title="Google Chrome Mobile (只针对 Android)"></a>Google Chrome Mobile (只针对 Android)</h5><p>从 Chrome 31 开始，你可以设置你的 Web 应用为“app mode”，如 Safari。</p>
<pre><code>&lt;!-- 链接到一个 manifest 并定义 manifest 的元数据。--&gt;
&lt;!-- manifest.json 中的例子也可以通过以下链接找到。--&gt;
&lt;link rel=&quot;manifest&quot; href=&quot;manifest.json&quot;&gt;

&lt;!-- 定义你的网页为 Web 应用 --&gt;
&lt;meta name=&quot;mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;

&lt;!-- 主屏幕图标 --&gt;
&lt;link rel=&quot;icon&quot; sizes=&quot;192x192&quot; href=&quot;highres-icon.png&quot;&gt;
</code></pre><h5 id="Microsoft-Internet-Explorer"><a href="#Microsoft-Internet-Explorer" class="headerlink" title="Microsoft Internet Explorer"></a>Microsoft Internet Explorer</h5><pre><code>&lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;&gt;
&lt;meta name=&quot;skype_toolbar&quot; content=&quot;skype_toolbar_parser_compatible&quot;&gt;

&lt;!-- IE10: 禁用链接点击高亮 (https://blogs.windows.com/buildingapps/2012/11/15/adapting-your-webkit-optimized-site-for-internet-explorer-10/) --&gt;
&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;

&lt;!-- 固定网站 (https://msdn.microsoft.com/en-us/library/dn255024(v=vs.85).aspx) --&gt;
&lt;meta name=&quot;application-name&quot; content=&quot;Sample Title&quot;&gt;
&lt;meta name=&quot;msapplication-tooltip&quot; content=&quot;A description of what this site does.&quot;&gt;
&lt;meta name=&quot;msapplication-starturl&quot; content=&quot;http://example.com/index.html?pinned=true&quot;&gt;
&lt;meta name=&quot;msapplication-navbutton-color&quot; content=&quot;#FF3300&quot;&gt;
&lt;meta name=&quot;msapplication-window&quot; content=&quot;width=800;height=600&quot;&gt;
&lt;meta name=&quot;msapplication-task&quot; content=&quot;name=Task 1;action-uri=http://host/Page1.html;icon-uri=http://host/icon1.ico&quot;&gt;
&lt;meta name=&quot;msapplication-task&quot; content=&quot;name=Task 2;action-uri=http://microsoft.com/Page2.html;icon-uri=http://host/icon2.ico&quot;&gt;
&lt;meta name=&quot;msapplication-badge&quot; value=&quot;frequency=NUMBER_IN_MINUTES;polling-uri=http://example.com/path/to/file.xml&quot;&gt;
&lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#FF3300&quot;&gt;
&lt;meta name=&quot;msapplication-TileImage&quot; content=&quot;path/to/tileimage.jpg&quot;&gt;

&lt;meta name=&quot;msapplication-config&quot; content=&quot;http://example.com/browserconfig.xml&quot;&gt;
&lt;meta name=&quot;msapplication-notification&quot; content=&quot;frequency=60;polling-uri=http://example.com/livetile;polling-uri2=http://example.com/livetile2&quot;&gt;
&lt;meta name=&quot;msapplication-task-separator&quot; content=&quot;1&quot;&gt;
</code></pre><h4 id="应用链接"><a href="#应用链接" class="headerlink" title="应用链接"></a>应用链接</h4><pre><code>&lt;!-- iOS --&gt;
&lt;meta property=&quot;al:ios:url&quot; content=&quot;applinks://docs&quot;&gt;
&lt;meta property=&quot;al:ios:app_store_id&quot; content=&quot;12345&quot;&gt;
&lt;meta property=&quot;al:ios:app_name&quot; content=&quot;App Links&quot;&gt;
&lt;!-- Android --&gt;
&lt;meta property=&quot;al:android:url&quot; content=&quot;applinks://docs&quot;&gt;
&lt;meta property=&quot;al:android:app_name&quot; content=&quot;App Links&quot;&gt;
&lt;meta property=&quot;al:android:package&quot; content=&quot;org.applinks&quot;&gt;
&lt;!-- Web 回退 --&gt;
&lt;meta property=&quot;al:web:url&quot; content=&quot;http://applinks.org/documentation&quot;&gt;
&lt;!-- 更多信息：http://applinks.org/documentation/ --&gt;
</code></pre><h4 id="国内的浏览器"><a href="#国内的浏览器" class="headerlink" title="国内的浏览器"></a>国内的浏览器</h4><h5 id="360浏览器"><a href="#360浏览器" class="headerlink" title="360浏览器"></a>360浏览器</h5><pre><code>&lt;!-- 选择渲染引擎 --&gt;
&lt;meta name=&quot;renderer&quot; content=&quot;webkit|ie-comp|ie-stand&quot;&gt;
</code></pre><h5 id="QQ-移动浏览器"><a href="#QQ-移动浏览器" class="headerlink" title="QQ 移动浏览器"></a>QQ 移动浏览器</h5><pre><code>&lt;!-- 在指定方向上锁定屏幕（锁定横/竖屏） --&gt;
&lt;meta name=&quot;x5-orientation&quot; content=&quot;landscape/portrait&quot;&gt;
&lt;!-- 全屏显示此页面 --&gt;
&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;
&lt;!-- 页面将以“应用模式”显示（全屏等）--&gt;
&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;
</code></pre><h5 id="UC浏览器"><a href="#UC浏览器" class="headerlink" title="UC浏览器"></a>UC浏览器</h5><pre><code>&lt;!-- 在指定方向上锁定屏幕（锁定横/竖屏） --&gt;
&lt;meta name=&quot;screen-orientation&quot; content=&quot;landscape/portrait&quot;&gt;
&lt;!-- 全屏显示此页面 --&gt;
&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;
&lt;!-- 即使在“文本模式”下，UC 浏览器也会显示图片 --&gt;
&lt;meta name=&quot;imagemode&quot; content=&quot;force&quot;&gt;
&lt;!-- 页面将以“应用模式”显示（全屏、禁止手势等） --&gt;
&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;
&lt;!-- 在此页面禁用 UC 浏览器的“夜间模式” --&gt;
&lt;meta name=&quot;nightmode&quot; content=&quot;disable&quot;&gt;
&lt;!-- 简化页面，减少数据传输 --&gt;
&lt;meta name=&quot;layoutmode&quot; content=&quot;fitscreen&quot;&gt;
&lt;!-- 禁用的 UC 浏览器的功能，“当此页面中有较多文本时缩放字体” --&gt;
&lt;meta name=&quot;wap-font-scale&quot; content=&quot;no&quot;&gt;
</code></pre>]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[浏览器书签的制作]]></title>
      <url>/2017/10/23/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%A6%E7%AD%BE/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>比如你是一名程序员或者测试，经常需要调试，你可以写好一段JS代码放到书签，不用每次复制粘贴了</p>
</blockquote></p>
<p>就这么一段代码，莫怪！！！</p>
<pre><code>    &lt;a href=&#39;javascript:void(function(){ alert(1); }());&#39; onclick=&quot;javascript:alert(&#39;请把我拖到你的浏览器书签栏&#39;); return false;&quot;&gt;获取QQ群成员&lt;/a&gt;
</code></pre><p>alert(1)  替换成你需要的代码。</p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[利用javascript获取并修改伪元素的值]]></title>
      <url>/2017/10/23/%E4%BC%AA%E5%85%83%E7%B4%A0/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>虽然标题里写的是伪元素,不过这篇文章主要是说::before和::after，其余几个伪元素（::first-letter、::first-line、::selection等)由于没有content属性，所以本文一笔带过，其实方法是一样的</p>
</blockquote></p>
<p>伪元素的重点在于一个伪，虽然它们可以被浏览器渲染引擎识别并正确渲染，然而伪元素本身并不是DOM元素,所以无法被js直接操作——因此任何基于JS直接选取DOM元素的CSS更改方法对伪元素都不起作用。（JQ看似万能，这个问题上是直接就栽了。因为JQ的选择符都是基于DOM元素）。</p>
<h4 id="获取伪元素的属性值"><a href="#获取伪元素的属性值" class="headerlink" title="获取伪元素的属性值"></a>获取伪元素的属性值</h4><p>虽然JS里没有可以直接操作伪元素的选择符，然而获取其CSS属性的方法还是有的。</p>
<h5 id="window-getComputedStyle"><a href="#window-getComputedStyle" class="headerlink" title="window.getComputedStyle"></a>window.getComputedStyle</h5><p>利用window.getComputedStyle方法选择到伪元素，然后利用getPropertyValue方法获取对应的属性的值。</p>
<pre><code>window.getComputedStyle(element[, pseudoElt]);
</code></pre><p>此方法包含两个参数，一个是元素本身另一个是元素的伪元素。</p>
<pre><code>var div=document.querySelector(&#39;div&#39;);
var fontSize=window.getComputedStyle(div,&#39;::before&#39;).getPropertyValue(&#39;font-size&#39;);//获取before伪元素的字号大小
</code></pre><h4 id="更改伪元素的属性值"><a href="#更改伪元素的属性值" class="headerlink" title="更改伪元素的属性值"></a>更改伪元素的属性值</h4><p>window.getComputedStyle方法虽然可以获取到伪元素的属性值，然而根据该方法名字也知道其只能获取CSS样式，并无法更改css属性，那么如果想要用js动态更改伪元素属性值的话，该怎么处理呢？<br>思路有以下几个：</p>
<ul><br>    <li>js更改data-*属性值来更改伪元素的content值</li><br>    <li>创建多个class，通过切换class来达到改变样式的目的</li><br>    <li>利用CSSStyleSheet的insertRule方法来添加样式</li><br>    <li>利用内部css样式的高优先级来覆盖外部css</li><br>    <li>以上实现思路的推荐程度依次递减</li><br></ul>

<h5 id="利用DOM的data-属性来更改content的值"><a href="#利用DOM的data-属性来更改content的值" class="headerlink" title="利用DOM的data-*属性来更改content的值"></a>利用DOM的data-*属性来更改content的值</h5><p>data-*是HTML5新增的DOM元素属性，作用大致可以理解为标记。具体用法可以参考MDN的这篇文章.而伪元素的content属性值除了常规赋值外，还有一种特殊的attr()方法来获取。</p>
<h6 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h6><pre><code>&lt;div class=&quot;test&quot; data-text=&quot;TEXT&quot; data-color=&quot;red&quot;&gt;&lt;/div&gt;
</code></pre><h6 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h6><pre><code>.test::before{
    content: attr(data-text);
}
</code></pre><h6 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h6><pre><code>TEXT
</code></pre><p>另外content其实可以多个attr连写，而且attr()内的可以是DOM元素的任意属性（比如class等，甚至非W3C标准属性也支持，不过不推荐这么做)所以很方便凑一些模版文字。像下面这种写法也是完全没问题的。注意用空格连接，不要用”+”号。<br>EXAM：</p>
<pre><code>.test::before {
  content: &#39;我的类是&#39; attr(class) &#39;想要变成&#39; attr(data-color);
}
</code></pre><blockquote><p>虽然W3C给attr()赋予了无限可能性,包括color,width等属性在未来都有希望用这个方法更改，然而目前只有content支持该方法，其余的都还是草稿状态，尚未有浏览器支持。之所以把这个方法放在第一位只是因为相比别的实现手法来说，这个方法真的太简单太优雅。</p>
</blockquote>
<p>但是如果真的想要改伪元素里的color等元素呢？</p>
<h5 id="更改class来实现伪元素样式的更改"><a href="#更改class来实现伪元素样式的更改" class="headerlink" title="更改class来实现伪元素样式的更改"></a>更改class来实现伪元素样式的更改</h5><p>把这个方法放到推荐位第二位估计会被很多人骂我：“卧槽，这么简单又没逼格的办法你竟然放到第二位！太没水平了”。不过再看完后面两种方法后或许你会对这种看法有所改观。<br>这个方法的优点是简单好用且无兼容性问题。缺点是多了一些其实用处不大的class,很像是jQuery类选择器中毒患者的做法；另外不适合多状态的场景（比如实时改变伪元素文字大小等）。<br>实现过于简单就不贴代码了。</p>
<p>前面的class切换大法可能让人感觉不痛快，这里来个高大上(伪)点的方法：</p>
<h5 id="利用CSSStyleSheet的insertRule方法来添加样式"><a href="#利用CSSStyleSheet的insertRule方法来添加样式" class="headerlink" title="利用CSSStyleSheet的insertRule方法来添加样式"></a>利用CSSStyleSheet的insertRule方法来添加样式</h5><blockquote><p>这部分内容和W3C标准牵连比较多，加上较冷门，没多少人关注，个人目前啃不动标准，所以这部分内容不会做深入分析，理解可能也会有问题，望斧正。</p>
</blockquote>
<p>CSSStyleSheet是浏览器存放页面内所有css样式表的对象方法（不包括行内样式)，每个link和style标签都代表一个CSSStyleSheet对象，获取他们可以用document.styleSheets方法。(需要注意的是虽然styleSheets方法返回的结果把link标签引进的外部样式也算进去了，但是非IE浏览器没办法获取到他们的cssRules属性，只有内嵌的style标签内的元素可以被获取到)</p>
<pre><code>document.styleSheets[0].insertRule(&#39;.test::before{color:green}&#39;,0)//chrome,firefox等非IE浏览器使用
document.styleSheets[0].addRule(&#39;.test::before{color:green}&#39;,0)//IE系列浏览器使用
/* 虽然部分浏览器也可以通过id来指定,&#39;document.styleSheets.id.insertRule()&#39;这种写法在chrome和IE下都行得通，但是firefox会返回&#39;undefined&#39;,所以建议还是使用index值来获取stylesheet */
</code></pre><p>.insertRule的语法是stylesheet.insertRule(rule, index),另一个参数是index，意思是在对应的styleSheets里的cssRules样式表中的位置，这个值越大则样式优先级越高，但是值不能超过当前样式表规则（cssRules）长度（CSS中先定义的样式总是会被后定义的覆盖就是这个缘故。），当值小于cssRules长度时，添加的样式规则会插入到index值定义的位置，之前其余的规则依次顺延。</p>
<blockquote><p>addrule和insertRule方法本质上没区别，只是后者不被IE浏览器识别，所以前者作为浏览器兼容方法存在。（下文为节省篇幅，以insertRule方法指代此两种方法。)<br>上面的代码看似简单一行，然而却不是每次都有效的。原因有以下几点：</p>
<pre><code>1. `document.styleSheets`虽然按照`style`和`link`的顺序返回对应的`StyleSheetList`，然而第一个如果是`link`而不是`style`,前面讲过此时无法获取对应的`cssRules`，则`document.styleSheets[0].cssRules`为`null`，`insertRule`方法不起作用。（此情况只针对非IE浏览器，IE浏览器正常，但是定义的早往往意味着被后面的样式覆盖，所以意义不大）
2. 同上，如果页面内没有内嵌样式的`style`标签，则`insertRule`方法也无法发挥作用。
3. `index`值不够大的话很有可能会早于css文件开始的定义位置，导致被覆盖。因此有个折衷办法就是给添加的样式增加`!important`，虽然我个人比较反感这么做。
</code></pre></blockquote>
<p>由此可见此方法的局限性，但是这种方法的优雅之处在于避免了直接写内嵌样式，而是通过css api来做更改。相比下面的方法来说，稍微好点。</p>
<h5 id="HEAD中添加style标签强制覆盖初始属性"><a href="#HEAD中添加style标签强制覆盖初始属性" class="headerlink" title="HEAD中添加style标签强制覆盖初始属性"></a>HEAD中添加style标签强制覆盖初始属性</h5><p>这个方法是利用内部css样式的高优先级来覆盖外部css，好处是简单易理解，实现简单。坏处就是吃相太难看，过于粗暴。</p>
<pre><code>var style=document.createElement(&#39;style&#39;);
style.innerHTML=&quot;.test::before{color:green}&quot;;//添加样式内容的话也可以用上面提到过的`insertRule`,相对例子里的硬编码会更优雅点。
document.head.appendChild(style);
</code></pre><p>看到这里可能有些人反应过来了，其实加style标签这种方法可以是insertRule实现方法的大前提——因为不是所有页面一开始都有内嵌的style样式的。这种方法虽然不是很好，但是有时候却又确确实实是必须的——比如“拖动滑块改变伪元素内文字大小”这个需求。</p>
<p>尊重原创-<a href="http://chitanda.me/2015/07/15/get-and-modify-pseudo-elements-value-by-javascript/" target="_blank" rel="external">biubiu</a></p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[浅谈label标签的妙用]]></title>
      <url>/2017/10/20/%E6%B5%85%E8%B0%88label%E6%A0%87%E7%AD%BE/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>本文仅仅举一个小杏子来说明label标签的妙用</p>
</blockquote></p>
<h4 id="FOR属性"><a href="#FOR属性" class="headerlink" title="FOR属性"></a>FOR属性</h4><pre><code>   功能：表示Label标签要绑定的HTML元素，你点击这个标签的时候，所绑定的元素将获取焦点。 
   用法：&lt;Label FOR=&quot;InputBox&quot;&gt;姓名&lt;/Label&gt;&lt;input ID=&quot;InputBox&quot; type=&quot;text&quot;&gt;
</code></pre><h4 id="ACCESSKEY属性："><a href="#ACCESSKEY属性：" class="headerlink" title="ACCESSKEY属性："></a>ACCESSKEY属性：</h4><pre><code>   功能：表示访问Label标签所绑定的元素的热键，当您按下热键，所绑定的元素将获取焦点。 
   用法：&lt;Label FOR=&quot;InputBox&quot; ACCESSKEY＝&quot;N&quot;&gt;姓名&lt;/Label&gt;&lt;input ID=&quot;InputBox&quot; type=&quot;text&quot;&gt;
</code></pre><h4 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h4><pre><code>    accessKey属性所设置的快捷键不能与浏览器的快捷键冲突，否则将优先激活浏览器的快捷键。
</code></pre><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><pre><code>
1. 要将 LABEL 绑定到其它的控件，请将 LABEL 元素的 FOR 属性设置为与该控件的 ID 相同。

2. 将 LABEL 绑定到控件的 NAME 属性毫无用处。但是，要提交表单，你必须为 LABEL 元素所绑定到的控件指定 NAME。 

3. 有两种方法给所指定的快捷键添加下划线。LABEL 元素的 rich text 支持可以在 ACCESSKEY 属性所指定的快捷键字符两侧加上 U 元素。如果你更愿意使用样式表(CSS)来应用样式，可以将该字符包含在 SPAN 中，并设置样式为“text-decoration: underline”。 

4. 如果用户单击 LABEL，则会先触发 LABEL 上的 onclick 事件，然后触发由 htmlFor 属性所指定的控件上的 onclick 事件。按下 LABEL 设定的快捷键将设置焦点但并不触发 onclick 事件。 

5. LABEL标签不光只能用于INPUT元素，只要是点击一个元素触发另外一个元素的（简单）事件都可以用LABEL标签。
</code></pre><p>演示代码-<a href="https://xin-LianK.github.io/LittleBlog">biubiu</a></p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[滚动条的设置]]></title>
      <url>/2017/10/16/%E6%BB%9A%E5%8A%A8%E6%9D%A1%E8%AE%BE%E7%BD%AE/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>滚动条君太丑了，把它打一遍，就好看了</p>
</blockquote></p>
<h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法:"></a>使用方法:</h4><h5 id="通常的设置"><a href="#通常的设置" class="headerlink" title="通常的设置"></a>通常的设置</h5><pre><code>
/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/
::-webkit-scrollbar
{
    width: 16px;
    height: 16px;
    background-color: #F5F5F5;
}

/*定义滚动条轨道 内阴影+圆角*/
::-webkit-scrollbar-track
{
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
    border-radius: 10px;
    background-color: #F5F5F5;
}

/*定义滑块 内阴影+圆角*/
::-webkit-scrollbar-thumb
{
    border-radius: 10px;
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
    background-color: #555;
}
</code></pre><h5 id="再详细的设置"><a href="#再详细的设置" class="headerlink" title="再详细的设置"></a>再详细的设置</h5><p>在这我就不鼓捣了，欢迎各位鼓捣</p>
<pre><code>
:horizontal
//horizontal伪类适用于任何水平方向上的滚动条

:vertical
//vertical伪类适用于任何垂直方向的滚动条

:decrement
//decrement伪类适用于按钮和轨道碎片。表示递减的按钮或轨道碎片，例如可以使区域向上或者向右移动的区域和按钮

:increment
//increment伪类适用于按钮和轨道碎片。表示递增的按钮或轨道碎片，例如可以使区域向下或者向左移动的区域和按钮

:start
//start伪类适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的前面

:end
//end伪类适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的后面

:double-button
//double-button伪类适用于按钮和轨道碎片。判断轨道结束的位置是否是一对按钮。也就是轨道碎片紧挨着一对在一起的按钮。

:single-button
//single-button伪类适用于按钮和轨道碎片。判断轨道结束的位置是否是一个按钮。也就是轨道碎片紧挨着一个单独的按钮。

:no-button
no-button伪类表示轨道结束的位置没有按钮。

:corner-present
//corner-present伪类表示滚动条的角落是否存在。

:window-inactive
//适用于所有滚动条，表示包含滚动条的区域，焦点不在该窗口的时候。

::-webkit-scrollbar-track-piece:start {
/*滚动条上半边或左半边*/
}

::-webkit-scrollbar-thumb:window-inactive {
/*当焦点不在当前区域滑块的状态*/
}

::-webkit-scrollbar-button:horizontal:decrement:hover {
/*当鼠标在水平滚动条下面的按钮上的状态*/
}
</code></pre><p>演示代码-<a href="https://xin-LianK.github.io">biubiu</a><br>尊重原创-<a href="http://www.cnblogs.com/kugeliu/p/7196656.html" target="_blank" rel="external">biubiu</a></p>
]]></content>
      
        <categories>
            
            <category> CSS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[有趣的小人时钟]]></title>
      <url>/2017/10/13/%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B0%8F%E4%BA%BA%E6%97%B6%E9%92%9F/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>偶然间翻到一篇国外大神的博客，发现的一个有趣的小人动作时钟</p>
</blockquote></p>
<h4 id="效果图如下："><a href="#效果图如下：" class="headerlink" title="效果图如下："></a>效果图如下：</h4><h5 id="透明背景："><a href="#透明背景：" class="headerlink" title="透明背景："></a>透明背景：</h5><script charset="Shift_JIS" src="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js"></script>

<h5 id="白色背景："><a href="#白色背景：" class="headerlink" title="白色背景："></a>白色背景：</h5><script charset="Shift_JIS" src="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_wh.js"></script>

<h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法:"></a>使用方法:</h4><p>如果想使用透明背景的，直接引用这一段代码：</p>
<pre><code>&lt;script charset=&quot;Shift_JIS&quot; src=&quot;http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js&quot;&gt;&lt;/script&gt;
</code></pre><p>如果想使用白色背景的，直接引用这一段代码：</p>
<pre><code>&lt;script charset=&quot;Shift_JIS&quot; src=&quot;http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_wh.js&quot;&gt;&lt;/script&gt;
</code></pre><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><span style="color:red;">注意事项</span></h4><p>1.如果你想改变他的位置，只需要将这段代码用一个 div 抱起来改变 div 的样式就可以了，是不是很神奇的，哈哈</p>
<p>2.上传到github上不显示。鼓捣了好久，换了各种方式，无果，原来是因为浏览器阻止了脚本，因为他是不安全的</p>
<p>演示代码-<a href="https://xin-LianK.github.io">biubiu</a><br>搬砖-<a href="http://chabudai.org/blog/?p=59" target="_blank" rel="external">biubiu</a></p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[滚下来，滚上去]]></title>
      <url>/2017/10/13/scroll/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>JS中的Scrolle属性</p>
</blockquote></p>
<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>网页的scroll属性，测试效果就是浏览器鼠标滚动，当你滚动的时候，会发现网页上的变化</p>
<h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>目前有两个重要知识点，如下：</p>
<p>document.documentElement.scrollTop || document.body.scrollTop;   兼容性的问题，获取滚动条高度</p>
<p>window.onscroll = function(){}   滚动条滚动触发的事件</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><pre><code>window.onscroll = function () {
    var t = document.documentElement.scrollTop || document.body.scrollTop;

    document.getElementById(&#39;box&#39;).onclick = function () {
        document.getElementById(&#39;box&#39;).style.top = &#39;-900px&#39;;
    }
    if (t &gt; 400) {
        document.getElementById(&#39;box&#39;).style.top = &#39;-380px&#39;;
    } else if (t &lt; 400) {
        document.getElementById(&#39;box&#39;).style.top = &#39;-900px&#39;;
    }
}</code></pre>
<h4 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h4><p>·······目前返回顶部的效果还不是最佳，能力有限，后续改进</p>
<p>演示代码-<a href="https://xin-LianK.github.io/scroll">biubiu</a><br>源代码-<a href="https://github.com/xin-LianK/scroll" target="_blank" rel="external">biubiu</a></p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[窝藏好了哦！]]></title>
      <url>/2017/10/12/%E7%AA%9D%E8%97%8F%E5%A5%BD%E4%BA%86%E5%95%8A/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>JS中的Title属性</p>
</blockquote></p>
<p><img src="/Aimg/title.png"></p>
<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>网页的title属性，测试效果就是浏览器标签上的文字，当你切换标签的时候，会发现标签上的文字变化</p>
<h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>使用了HTML5的Page Visibility API</p>
<p>目前页面可见性API有两个属性，一个事件，如下：</p>
<p>document.hidden: Boolean值，表示当前页面可见还是不可见</p>
<p>document.visibilityState: 返回当前页面的可见状态，取值有 hidden visible prerender preview</p>
<p>visibilitychange: 当可见状态改变时候触发的事件</p>
<p>以前只知道可以通过 iframe + onblur/onfocus事件 来检测页面可见性，有了这个 API 真是方便优雅了很多啊</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><pre><code>var OriginTitile = document.title;
var titleTime;
document.addEventListener(&#39;visibilitychange&#39;, function() {
    if (document.hidden) {
        document.title = &#39;(つェ⊂)我藏好了哦~ &#39; + OriginTitile;
        clearTimeout(titleTime);
    }
    else {
        document.title = &#39;(*´∇｀*) 被你发现啦~ &#39; + OriginTitile;
        titleTime = setTimeout(function() {
            document.title = OriginTitile;
        }, 2000);
    }
});</code></pre>
<p>演示代码-<a href="https://xin-LianK.github.io">biubiu</a><br>源代码-<a href="https://github.com/xin-LianK/title/blob/master/title.js" target="_blank" rel="external">biubiu</a></p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[JS温习之路开始喽]]></title>
      <url>/2017/10/11/js%E5%BC%80%E5%A7%8B/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>JS的温习之路</p>
</blockquote></p>
<pre><code>
由于时间漏洞，一年的时间让我放弃了前端，如今重新拿起，基本上都忘的差不多了

可是公司并不需要JS，而是angular，导致我的JS越来越恶心

逻辑也越来越差了，没办法，只能补了

为我自己加油
</code></pre>]]></content>
      
        <categories>
            
            <category> 自言自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[浅谈高级的“闭包（Closure）”]]></title>
      <url>/2017/10/10/%E9%97%AD%E5%8C%85/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>千万别被名字给忽悠了，我就是小小的介绍，只是介绍，怕打脸！</p>
</blockquote><br>闭包（closure）是Javascript语言的一个难点，也是它的特色，很多高级应用都要依靠闭包实现。<br>其中就包括前端工程师面试的时候，闭包难倒了多少英雄好汉，又有多少的回答有打动了面试官的心</p>
<h4 id="1-变量的作用域"><a href="#1-变量的作用域" class="headerlink" title="1.变量的作用域"></a>1.变量的作用域</h4><p>要理解闭包，首先必须理解Javascript特殊的变量作用域。</p>
<p>变量的作用域无非就是两种：全局变量和局部变量。</p>
<p>Javascript语言的特殊之处，就在于函数内部可以直接读取全局变量。<br><pre><code>var n=999;
function f1(){
    alert(n);
}
f1(); &#x2F;&#x2F; 999</code></pre><br>另一方面，在函数外部自然无法读取函数内的局部变量。<br><pre><code>function f1(){
　　var n=999;
}
alert(n); &#x2F;&#x2F; error</code></pre><br>这里有一个地方需要注意，函数内部声明变量的时候，一定要使用var命令。如果不用的话，你实际上声明了一个全局变量！<br><pre><code>function f1(){
　　n=999;
}
f1();
alert(n); &#x2F;&#x2F; 999</code></pre></p>
<h4 id="2-如何从外部读取局部变量"><a href="#2-如何从外部读取局部变量" class="headerlink" title="2.如何从外部读取局部变量"></a>2.如何从外部读取局部变量</h4><p>出于种种原因，我们有时候需要得到函数内的局部变量。但是，前面已经说过了，正常情况下，这是办不到的，只有通过通方法才能实现。</p>
<p>那就是在函数的内部，再定义一个函数。<br><pre><code>function f1(){
　　var n=999;
　　function f2(){
　　　　alert(n); &#x2F;&#x2F; 999
　　}
}</code></pre></p>
<p>在上面的代码中，函数f2就被包括在函数f1内部，这时f1内部的所有局部变量，对f2都是可见的。但是反过来就不行，f2内部的局部变量，对f1就是不可见的。这就是Javascript语言特有的”链式作用域”结构（chain scope），子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。<br>既然f2可以读取f1中的局部变量，那么只要把f2作为返回值，我们不就可以在f1外部读取它的内部变量了吗！<br><pre><code>function f1(){
　　var n=999;
    function f2(){
        alert(n); 
    }
    return f2;
}
var result=f1();
result(); &#x2F;&#x2F; 999</code></pre></p>
<h4 id="3-闭包的概念"><a href="#3-闭包的概念" class="headerlink" title="3.闭包的概念"></a>3.闭包的概念</h4><p>上一节代码中的f2函数，就是闭包。<br>各种专业文献上的”闭包”（closure）定义非常抽象，很难看懂。我的理解是，闭包就是能够读取其他函数内部变量的函数。<br>由于在Javascript语言中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解成”定义在一个函数内部的函数”。<br>所以，在本质上，闭包就是将函数内部和函数外部连接起来的一座桥梁。</p>
<h4 id="4-闭包的用途"><a href="#4-闭包的用途" class="headerlink" title="4.闭包的用途"></a>4.闭包的用途</h4><p>闭包可以用在许多地方。它的最大用处有两个，一个是前面提到的可以读取函数内部的变量，另一个就是让这些变量的值始终保持在内存中。<br>怎么来理解这句话呢？请看下面的代码。<br><pre><code>function f1(){
　　var n=999;
    nAdd=function(){n+=1}
    function f2(){
        alert(n);
    }
    return f2;
}
var result=f1();
result(); &#x2F;&#x2F; 999
nAdd();
result(); &#x2F;&#x2F; 1000</code></pre><br>在这段代码中，result实际上就是闭包f2函数。它一共运行了两次，第一次的值是999，第二次的值是1000。这证明了，函数f1中的局部变量n一直保存在内存中，并没有在f1调用后被自动清除。</p>
<p>为什么会这样呢？原因就在于f1是f2的父函数，而f2被赋给了一个全局变量，这导致f2始终在内存中，而f2的存在依赖于f1，因此f1也始终在内存中，不会在调用结束后，被垃圾回收机制（garbage collection）回收。</p>
<p>这段代码中另一个值得注意的地方，就是”nAdd=function(){n+=1}”这一行，首先在nAdd前面没有使用var关键字，因此nAdd是一个全局变量，而不是局部变量。其次，nAdd的值是一个匿名函数（anonymous function），而这个匿名函数本身也是一个闭包，所以nAdd相当于是一个setter，可以在函数外部对函数内部的局部变量进行操作。</p>
<h4 id="5-使用闭包的注意点"><a href="#5-使用闭包的注意点" class="headerlink" title="5.使用闭包的注意点"></a>5.使用闭包的注意点</h4><p>1）由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。</p>
<p>2）闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。</p>
<h4 id="6-思考题"><a href="#6-思考题" class="headerlink" title="6.思考题"></a>6.思考题</h4><p>如果你能理解下面两段代码的运行结果，应该就算理解闭包的运行机制了。</p>
<p>代码片段一<br><pre><code>var name = &quot;The Window&quot;;
var object = {
    name : &quot;My Object&quot;,
    getNameFunc : function(){
        return function(){
            return this.name;
        };
    }
};
alert(object.getNameFunc()());</code></pre></p>
<p>代码片段二<br><pre><code>var name = &quot;The Window&quot;;
var object = {
    name : &quot;My Object&quot;,
    getNameFunc : function(){
        var that = this;
        return function(){
            return that.name;
        };
    }
};
alert(object.getNameFunc()());</code></pre></p>
<p>小结：理解是一回事，使用又是另外一回事，面前小编只处于理解这回事上徘徊</p>
<p>支持原创-<a href="http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html" target="_blank" rel="external">biubiu</a></p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[JS中的Date对象]]></title>
      <url>/2017/10/09/Date%E5%AF%B9%E8%B1%A1/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>JS中的Date对象</p>
</blockquote></p>
<p>在JavaScript中，Date对象用来表示日期和时间。<br><pre><code>var now = new Date(); &#x2F;&#x2F;  获取当前时间
now; &#x2F;&#x2F; Tue Oct 10 2017 14:48:38 GMT+0800 (中国标准时间)
now.getFullYear(); &#x2F;&#x2F; 2015, 年份
now.getMonth(); &#x2F;&#x2F; 5, 月份，注意月份范围是0~11，5表示六月
now.getDate(); &#x2F;&#x2F; 24, 表示24号
now.getDay(); &#x2F;&#x2F; 3, 表示星期三
now.getHours(); &#x2F;&#x2F; 19, 24小时制
now.getMinutes(); &#x2F;&#x2F; 49, 分钟
now.getSeconds(); &#x2F;&#x2F; 22, 秒
now.getMilliseconds(); &#x2F;&#x2F; 875, 毫秒数
now.getTime(); &#x2F;&#x2F; 1435146562875, 以number形式表示的时间戳</code></pre></p>
<p>注意，当前时间是浏览器从本机操作系统获取的时间，所以不一定准确，因为用户可以把当前时间设定为任何值。</p>
<p>如果要创建一个指定日期和时间的Date对象，可以用：</p>
<pre><code>var now = new Date(1996,4,27,20,19,30);
now;  &#x2F;&#x2F;Mon May 27 1996 20:19:30 GMT+0800 (中国标准时间)</code></pre>
<p>时间戳转换为标准时间</p>
<pre><code>var d = new Date(1435146562875);
d; &#x2F;&#x2F; Wed Jun 24 2015 19:49:22 GMT+0800 (CST)</code></pre>
<p>转换显示类型得两个函数<br><pre><code>var d = new Date(1435146562875);
d.toLocaleString(); &#x2F;&#x2F; &#39;2015&#x2F;6&#x2F;24 下午7:49:22&#39;，本地时间（北京时区+8:00），显示的字符串与操作系统设定的格式有关
d.toUTCString(); &#x2F;&#x2F; &#39;Wed, 24 Jun 2015 11:49:22 GMT&#39;，UTC时间，与本地时间相差8小时</code></pre></p>
<p>注意：JavaScript的月份范围用整数表示是0~11，0表示一月，1表示二月……，所以要表示6月，我们传入的是5！这绝对是JavaScript的设计者当时脑抽了一下，但是现在要修复已经不可能了。</p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[异地恋到底有多不容易]]></title>
      <url>/2017/10/04/%E5%BC%82%E5%9C%B0%E6%81%8B/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>异地恋到底有多不容易</p>
</blockquote></p>
<div id="box" style="text-align: center"><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/aa.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/a.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">异地恋最怕一个忙的跟狗一样，</li><br>        <li style="padding:0;margin:0;list-style:none;">一个闲的跟屎一样。</li><br>        <li style="padding:0;margin:0;list-style:none;">最怕一个在计划将来，</li><br>        <li style="padding:0;margin:0;list-style:none;">另一个在酝酿分手。</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif"><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/b.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/bb.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">久别重逢后的一瞬间竟然会有一丝尴尬…</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif"><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/cc.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/c.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">我已经哭湿了枕头说不出话</li><br>        <li style="padding:0;margin:0;list-style:none;">你却以为我闹脾气不理你</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif"><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/d.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/dd.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">挂着有对象的名号</li><br>        <li style="padding:0;margin:0;list-style:none;">过着单身狗的生活</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/e.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/ee.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">“你不要哭，我抱不到你”</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/f.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/ff.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">一切喜怒哀乐都只在手机屏幕上</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/g.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/gg.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">其实 每次和你道别后 </li><br>        <li style="padding:0;margin:0;list-style:none;">我都有悄悄回过头 </li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/h.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/hh.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">我羡慕那些和你在同一座城市的人</li><br>        <li style="padding:0;margin:0;list-style:none;">可以和你擦肩而过，乘坐同一辆地铁</li><br>        <li style="padding:0;margin:0;list-style:none;">走同一条路，看同一处风景</li><br>        <li style="padding:0;margin:0;list-style:none;">他们甚至还可能在汹涌的人潮中</li><br>        <li style="padding:0;margin:0;list-style:none;">不小心踩了你一脚说对不起</li><br>        <li style="padding:0;margin:0;list-style:none;">再听你温柔道声没关系</li><br>        <li style="padding:0;margin:0;list-style:none;">他们那么幸运</li><br>        <li style="padding:0;margin:0;list-style:none;">而我只能从心里对你说：我想你</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/i.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/ii.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">我看见你住的城市的地名，都会多看几眼</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/j.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/jj.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">我的手机里，有两个城市的天气预报</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/k.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/kk.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">提前一个月就开始订机票，买衣服</li><br>        <li style="padding:0;margin:0;list-style:none;">想好见你那天穿哪双鞋，背哪个包，化什么妆</li><br>        <li style="padding:0;margin:0;list-style:none;">见面是先说话还是先来一个大大的拥抱…</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/l.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/ll.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">不知道你胖了还是瘦了</li><br>        <li style="padding:0;margin:0;list-style:none;">不知道你一日三餐吃的什么</li><br>        <li style="padding:0;margin:0;list-style:none;">不知道你这里有没有下雨，你是不是又忘了带伞</li><br>        <li style="padding:0;margin:0;list-style:none;">不知道你现在是不是在想我….</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/m.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/mm.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">短信听不出语气，电话看不到表情</li><br>        <li style="padding:0;margin:0;list-style:none;">最难过的是连分手都不能当面说清</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/n.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/nn.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">每晚隔着屏幕说晚安，好想当面说一次</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/o.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/oo.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">我去看了</li><br>        <li style="padding:0;margin:0;list-style:none;">你每天晚上都去十一街区的超市买点东西吃</li><br>        <li style="padding:0;margin:0;list-style:none;">你烦闷的时候都会去十三街区的小酒吧喝点东西</li><br>        <li style="padding:0;margin:0;list-style:none;">你们公司楼下的热狗店的热狗是不是还买一送一</li><br>        <li style="padding:0;margin:0;list-style:none;">你住过的每一套房子都有一个朝南的窗户，我没去过</li><br>        <li style="padding:0;margin:0;list-style:none;">但是我在地图上找了一遍又一遍</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>    </ul><br>    <ul style="padding:0;margin:0;list-style:none;" id="item"><br>        <li style="padding:0;margin:0;list-style:none;"><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/p.jpg" alt=""></span><span style="width:40%;display:inline-block;"><img src="/Aimg/20171004/pp.jpg" alt=""></span><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">我不想异地恋啊，可是，我喜欢你啊</li><br>        <li style="padding:0;margin:0;list-style:none;"><img src="/Aimg/20171004/0.gif" alt=""><br>        </li><br>        <li style="padding:0;margin:0;list-style:none;">讨厌异地恋的人，因为那是一种无法忍受的煎熬 </li><br>        <li style="padding:0;margin:0;list-style:none;">喜欢异地恋的人，因为那是一种独一无二的考验</li><br>        <li style="padding:0;margin:0;list-style:none;">异地恋，熬过来的结局是美好的，但其过程确实痛苦</li><br>        <li style="padding:0;margin:0;list-style:none;">愿你的爱情，如你所愿。</li><br>    </ul><br></div>]]></content>
      
        <categories>
            
            <category> 自言自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[操纵浏览器历史记录]]></title>
      <url>/2017/09/28/%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>DOM  window 对象通过对象提供对浏览器历史的访问history。它暴露了有用的方法和属性，让您可以来回浏览用户的历史记录，以及 - 从HTML5开始 - 操纵历史堆栈的内容。</p>
</blockquote></p>
<h4 id="旅行历史"><a href="#旅行历史" class="headerlink" title="旅行历史"></a>旅行历史</h4><p>通过用户的历史记录中向后和向前移动使用做了back()，forward()和go() 方法。</p>
<h5 id="向前和向后移动"><a href="#向前和向后移动" class="headerlink" title="向前和向后移动"></a>向前和向后移动</h5><pre><code>1 | window.history.back();
</code></pre><p>这将完全像用户点击浏览器工具栏上的“后退”按钮。</p>
<p>类似地，您可以向前移动（就像用户点击转发按钮一样），如下所示：</p>
<pre><code>1 | window.history.forward();
</code></pre><h5 id="移动到历史上的一个特定点"><a href="#移动到历史上的一个特定点" class="headerlink" title="移动到历史上的一个特定点"></a>移动到历史上的一个特定点</h5><p>您可以使用该go() 方法从会话历史记录中加载特定页面，由其相对位置标识到当前页面（当前页面当然是相对索引0）。</p>
<p>要移回一页（相当于打电话back()）：</p>
<pre><code>1 | window.history.go(-1);
</code></pre><p>要向前移动页面，就像调用forward()：</p>
<pre><code>1 | window.history.go(1);
</code></pre><p>同样地，您可以通过传递2向前移动2页，依此类推。</p>
<p>您可以通过查看length属性的值来确定历史堆栈中的页数：</p>
<pre><code>1 | var numberOfEntries = window.history.length;
</code></pre><h4 id="添加和修改历史记录条目"><a href="#添加和修改历史记录条目" class="headerlink" title="添加和修改历史记录条目"></a>添加和修改历史记录条目</h4><p>HTML5引入了history.pushState（）和history.replaceState（）方法，可以分别添加和修改历史记录条目。这些方法与window.onpopstate事件一起工作。</p>
<p>使用history.pushState() 更改在XMLHttpRequest更改状态后创建的对象的HTTP标头中使用的引用来更改引用。引用者将是this创建XMLHttpRequest对象时窗口的文档的URL 。</p>
<h5 id="pushState（）方法的示例"><a href="#pushState（）方法的示例" class="headerlink" title="pushState（）方法的示例"></a>pushState（）方法的示例</h5><p>假设( mozilla.org/foo.html )执行以下JavaScript：</p>
<pre><code>var stateObj = { foo: &quot;bar&quot; };
history.pushState(stateObj, &quot;page 2&quot;, &quot;bar.html&quot;);
</code></pre><p>这将导致URL栏显示( mozilla.org/bar.html )，但不会导致浏览器加载 bar.html 甚至检查是否 bar.html 存在。</p>
<p>假设用户现在导航到( google.com )，然后点击。此时，URL栏将显示( mozilla.org/ )bar.html，该页面将获取popstate其状态对象包含副本的事件stateObj。页面本身将看起来像foo.html，尽管该页面可能在popstate事件期间修改其内容。</p>
<p>如果我们再次点击，URL将更改为( mozilla.org/ )foo.html，该文档将获取另一个popstate事件，此时为空状态对象。这样做也不会将文档的内容从上一步改变，尽管文档可能会在收到popstate事件后手动更新其内容。</p>
<h5 id="pushState（）方法"><a href="#pushState（）方法" class="headerlink" title="pushState（）方法"></a>pushState（）方法</h5><p>pushState()需要三个参数：状态对象，标题（当前被忽略）和（可选）URL。我们来详细检查这三个参数中的每一个：</p>
<ul><br>    <li>状态对象 - 状态对象是与由新​​建历史记录创建的JavaScript对象pushState()。每当用户导航到新状态时，popstate触发事件，并且state事件的属性包含历史条目的状态对象的副本。<br><br>        状态对象可以是可以被序列化的任何东西。因为Firefox将状态对象保存到用户的磁盘，所以在用户重新启动浏览器后可以恢复它们，我们在状态对象的序列化表示上强加了一个640k字符的大小限制。如果传递的序列化表示大于此的状态对象pushState()，则该方法将抛出异常。如果您需要比这更多的空间，则鼓励您使用sessionStorage和/或localStorage。<br>    </li><br>    <li>标题 - Firefox目前忽略此参数，尽管它将来可能会使用它。在这里传递空字符串应该是安全的，以防将来更改方法。或者，您可以传递您正在移动的州的简称。</li><br>    <li>URL - 此历史记录条目的URL由此参数给出。请注意，浏览器不会在调用后尝试加载此URL pushState()，但可能会尝试稍后加载该URL，例如在用户重新启动浏览器之后。新的URL不一定是绝对的; 如果它是相对的，它相对于当前URL解析。新的URL必须与当前URL的起始位置相同; 否则pushState()会抛出异常。此参数是可选的; 如果未指定，则将其设置为文档的当前URL。</li><br></ul>

<p>在某种意义上，调用pushState()类似于设置window.location = “#foo”，因为这两者也将创建和激活与当前文档相关联的另一历史记录条目。但pushState()有一些优点：</p>
<ul><br>    <li>新的URL可以是与当前URL相同的任何URL。相比之下，只有修改哈希值时，设置才会window.location保持相同document。</li><br>    <li>如果您不想，您不必更改URL。相比之下，window.location = “#foo”;如果当前哈希不是，设置只会创建一个新的历史记录条目#foo。</li><br>    <li>您可以将任意数据与新的历史记录条目相关联。使用基于散列的方法，您需要将所有相关数据编码为短字符串。</li><br>    <li>如果title 随后由浏览器使用，则可以使用该数据（独立于散列）。</li><br></ul>

<h5 id="replaceState（）方法"><a href="#replaceState（）方法" class="headerlink" title="replaceState（）方法"></a>replaceState（）方法</h5><p>history.replaceState()操作完全一样history.pushState()，只是replaceState()修改当前的历史条目，而不是创建一个新的。请注意，这并不妨碍在全局浏览器历史记录中创建新条目。</p>
<p>replaceState() 当您想要更新当前历史记录条目的状态对象或URL以响应某些用户操作时，这是特别有用的。</p>
<h5 id="replaceState（）方法的示例"><a href="#replaceState（）方法的示例" class="headerlink" title="replaceState（）方法的示例"></a>replaceState（）方法的示例</h5><p>假设( mozilla.org/foo.html )执行以下JavaScript：</p>
<pre><code>var stateObj = { foo: &quot;bar&quot; };
history.pushState(stateObj, &quot;page 2&quot;, &quot;bar.html&quot;);
</code></pre><p>上面这两行的解释可以在“ExampleState（）方法”部分找到。那么假设( mozilla.org/bar.html )执行以下JavaScript：</p>
<pre><code>history.replaceState(stateObj, &quot;page 3&quot;, &quot;bar2.html&quot;);
</code></pre><p>这将导致URL栏显示( mozilla.org/bar2.html )，但不会导致浏览器加载bar2.html甚至检查是否bar2.html存在。</p>
<p>假设用户现在导航到( www.microsoft.com )，然后点击。此时，URL栏将显示( mozilla.org/bar2.html) 。如果用户现在再次点击，URL栏将显示( mozilla.org/foo.html )，并且totaly绕过bar.html。</p>
<h5 id="阅读当前状态"><a href="#阅读当前状态" class="headerlink" title="阅读当前状态"></a>阅读当前状态</h5><p>当您的页面加载时，它可能具有非空状态对象。这可能会发生，例如，如果页面设置状态对象（使用pushState()或replaceState()），然后用户重新启动其浏览器。当您的页面重新加载时，该页面将收到一个onload 事件，但没有popstate事件。  但是，如果您读取history.state属性，则会返回状态对象，如果一个popstate已经触发，您将获得该状态对象。</p>
<p>您可以读取当前历史记录条目的状态，而无需等待popstate使用如下history.state属性的事件：</p>
<pre><code>var currentState = history.state;
</code></pre>]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[一定会好好的]]></title>
      <url>/2017/09/27/%E6%AD%8C%E8%AF%8D-%E4%B8%80%E5%AE%9A%E4%BC%9A%E5%A5%BD%E5%A5%BD%E7%9A%84/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>一定会好好的<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—–杨栋梁</p>
</blockquote></p>
<pre><code>[00:01.00]一定会好好的
[00:07.00]演唱：杨栋梁

[00:11.06]当思念慢慢褪色

[00:16.68]你不再是那一个 我最爱的

[00:22.55]秋天有数不完的落叶

[00:25.80]时间无法停止

[00:29.01]我怎么还能说爱着

[00:35.48]当希望变成灰色

[00:40.88]人生路上还有 很多坎坷

[00:46.72]有着多少白天黑夜

[00:49.96]继续变换

[00:53.13]反复颠倒我爱情的曲折

[00:58.48]我一定会好好的

[01:01.50]不过放弃怕什么

[01:04.67]这是成长 历经的挫折

[01:11.17]心的自由 忘了那眼泪的苦涩

[01:17.64]我要属于我的快乐

[01:23.11]我一定会好好的

[01:25.70]不管忍受多少忐忑

[01:29.14]未来还有很多的选择

[01:35.31]相信自己 我不是一个失败者

[01:41.61]只有内心的执着
</code></pre><p><div style="color:#24a9e4;">美图在这里&nbsp;&nbsp;↓</div><br><img src="/Aimg/banner/ban13.jpg" class="[sad]" title="100% 300px [sad [sad]]"><br><div id="aplayer2" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer2"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "一定会好好的",
					author: "杨栋梁",
					url: "/mp3/一定会好好的.mp3",
					pic: "/Aimg/header/4.jpg",
				}
			});
		</script></p>
<p>→&nbsp;&nbsp;&nbsp;<a href="http://music.163.com/#/my/m/music/playlist?id=329442786" target="_blank" rel="external">我的网易云音乐</a></p>
]]></content>
      
        <categories>
            
            <category> 歌曲 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[我习惯了]]></title>
      <url>/2017/09/25/%E6%AD%8C%E8%AF%8D-%E6%88%91%E4%B9%A0%E6%83%AF%E4%BA%86/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>我习惯了<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—–小贱</p>
</blockquote></p>
<pre><code>[00:00.45]我习惯了
[00:02.70]演唱：小贱 

[00:25.68]温馨的房 干净的窗 

[00:29.67]冷了再温热我爱喝的汤 

[00:34.61]你最爱看夕阳 

[00:37.09]我最爱陪你走走 逛逛 

[00:43.92]地老天荒 地久天长 

[00:48.58]还是会感动当彼此对望 

[00:53.41]关上灯倾诉 每一天有趣的片段 

[00:59.70]笑着一起分享 

[01:02.63]我习惯了你就是我旅途的全部 

[01:07.29]我习惯了你所有兴趣爱好都牢牢记住 

[01:12.84]你舍不得穿哪件衣服 

[01:16.43]你看谁的书 看得多投入 

[01:21.28]我习惯了陪着你一起笑一起哭 

[01:25.80]我习惯了当你受委屈递给你所有温度 

[01:31.43]夜深人静不让你孤独 

[01:35.06]还很远的路 让我带你奔赴
</code></pre><p><div style="color:#24a9e4;">美图在这里&nbsp;&nbsp;↓</div><br><img src="/Aimg/banner/ban11.jpg" class="[sad]" title="100% 300px [sad [sad]]"><br><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer0"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "我习惯了",
					author: "小贱",
					url: "/mp3/我习惯了.mp3",
					pic: "/Aimg/header/3.jpg",
				}
			});
		</script></p>
<p>→&nbsp;&nbsp;&nbsp;<a href="http://music.163.com/#/my/m/music/playlist?id=329442786" target="_blank" rel="external">我的网易云音乐</a></p>
]]></content>
      
        <categories>
            
            <category> 歌曲 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Song List]]></title>
      <url>/2017/09/25/%E6%AD%8C%E5%8D%95/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>This is my Song List</p>
</blockquote></p>

			<div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div>
			<script>
				var options = {"narrow":false,"autoplay":true,"showlrc":3,"mode":"random","music":[{"title":"回忆总想哭","author":"姜玉阳","url":"/mp3/回忆总想哭.mp3","pic":"/Aimg/header/2.png","lrc":"/mp3/回忆总想哭.lrc"},{"title":"我习惯了","author":"小贱","url":"/mp3/我习惯了.mp3","pic":"/Aimg/header/2.png","lrc":"/mp3/我习惯了.lrc"},{"title":"一定会好好的","author":"杨栋梁","url":"/mp3/一定会好好的.mp3","pic":"/Aimg/header/4.png","lrc":"/mp3/一定会好好的.lrc"}]};
				options.element = document.getElementById("aplayer1");
				new APlayer(options);
			</script>

		
<p>→&nbsp;&nbsp;&nbsp;<a href="http://music.163.com/#/my/m/music/playlist?id=329442786" target="_blank" rel="external">我的网易云音乐</a></p>
]]></content>
      
        <categories>
            
            <category> 歌曲 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[回忆总想哭]]></title>
      <url>/2017/09/25/%E6%AD%8C%E8%AF%8D-%E5%9B%9E%E5%BF%86%E6%80%BB%E6%83%B3%E5%93%AD/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>回忆总想哭<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—–姜玉阳</p>
</blockquote></p>
<pre><code>[00:06.15] 词曲：姜玉阳
[00:13.83] 演唱：姜玉阳，南宫嘉俊

[00:28.45] 常常习惯性的想你的需要

[00:34.64] 不知你现在可好

[00:39.68] 换你一个微笑

[00:42.68] 我愿为爱乞讨

[00:45.84] 愿永远做你的依靠

[00:53.37] 果然没有爱也没有了烦恼

[00:59.24] 只是记忆抹不掉

[01:04.32] 你烫过的衣服

[01:07.35] 仿佛还有温度

[01:10.51] 却抵挡不了我寒冷孤独

[01:17.06] 回忆总想哭

[01:19.66] 一个人太孤独

[01:22.33] 这段情千山万水却迷了路

[01:28.45] 千辛万苦的付出

[01:31.51] 早已放弃了归路

[01:34.62] 爱到深处却只剩下无助

[01:41.51] 回忆总想哭

[01:44.36] 一个人的幸福

[01:46.96] 就像你最后给我那些叮嘱

[01:53.12] 爱如何形同陌路

[01:56.17] 你走有你走的苦

[01:59.26] 怎知你走以后不会为我哭

[02:31.50] 果然没有爱也没有了烦恼

[02:37.58] 只是记忆抹不掉

[02:42.85] 你烫过的衣服

[02:45.85] 仿佛还有温度

[02:48.89] 却抵挡不了我寒冷孤独
</code></pre><p><div style="color:#24a9e4;">美图在这里&nbsp;&nbsp;↓</div><br><img src="/Aimg/banner/ban8.jpg" class="[sad]" title="[100%] [300px] [sad [sad]]"><br><div id="aplayer3" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer3"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "回忆总想哭",
					author: "姜玉阳",
					url: "/mp3/回忆总想哭.mp3",
					pic: "/Aimg/header/2.png",
				}
			});
		</script></p>
<p>→&nbsp;&nbsp;&nbsp;<a href="http://music.163.com/#/my/m/music/playlist?id=329442786" target="_blank" rel="external">我的网易云音乐</a></p>
]]></content>
      
        <categories>
            
            <category> 歌曲 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用命令行和github交互]]></title>
      <url>/2017/09/21/github/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a></p>
<blockquote><p>只做简单教程，更深入的细节操作请另寻大神级别的，或者参考<a href="https://www.github.com" target="_blank" rel="external">官网</a></p>
</blockquote>
<h4 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h4><pre><code>git config --global user.name &quot;nate-river&quot;
git config --global user.email &quot;mayanlong7@icloud.com&quot;
git config --global push.default simple
</code></pre><h4 id="全局配置-1"><a href="#全局配置-1" class="headerlink" title="全局配置"></a>全局配置</h4><pre><code>git clone https://github.com/nate-river/bird.git
git --help
git status
git add *
git status
git commit -m &#39;test cli&#39;
git push
</code></pre><p>git push 会要求用户名和密码</p>
<h4 id="管理分支"><a href="#管理分支" class="headerlink" title="管理分支"></a>管理分支</h4><pre><code>git branch gh-pages
git checkout gh-pages
git merge master
git push --set-upstream origin gh-pages
</code></pre><p>注意 多使用git status 查看自己目前所在的分支</p>
]]></content>
      
        <categories>
            
            <category> github </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[LOL皮肤插件：CC挂载器]]></title>
      <url>/2017/09/21/lol/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>哇哇哇！本来想的是一天一篇博客的，可是身为技术渣渣的我真的不知道应该写什么。<br>于是我就把一款LOL皮肤插件拿出来充数了</p>
</blockquote></p>
<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><pre><code>这是我在大学时玩游戏找到的，对于我们这种小百姓自然买不起高大上的腾讯皮肤
明摆着也就是一个坑么，于是，我果断的选择破解（当然找[度娘](http://www.baidu.com)了---能力有限）
找了好多教程，好多软件。终于找到了最好的一款，名字叫【流光LOL换肤助手】，真的特别的使用，官方的所有皮肤都可以用
然而，在使用了很久之后，他他他他居然收费了，果断放弃
再次经过一番苦寻之后，终于找到了一款免费的，免费的，免费的cc换肤换肤插件
</code></pre><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><pre><code>这款换肤助手有两个版本：
1.其中有一款是收费的，平民玩家自然不考虑了
2.第二个也就是我所介绍的：
</code></pre><h5 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h5><p>1.首先你得先去下载皮肤包，各个渠道，这里我推荐两个渠道<a href="http://www.cclolcc.com/forum-46-1.html" target="_blank" rel="external">皮肤官网</a>,<a href="https://ttianta.ctfile.com/u/5269660/8352596" target="_blank" rel="external">T大的网盘</a><br>2.下载免费版的换肤器<a href="/document/CC.zip">点击下载CC换肤助手</a><br>3.把自己下载的皮肤拖进去，选中皮肤点击挂载，即可挂载成功<br>4.进去游戏你就可以享受有皮肤的乐趣了</p>
<h4 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h4><pre><code>登录游戏，自定义一局游戏，看看是不是换肤成功
</code></pre><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><pre><code>1.皮肤只可用来自慰，也就是只能自己看到，别人看不到。
2.就相当于修改本地文件，使你的默认皮肤换成了特效皮肤，只是本地文件
3.每个下载的皮肤，最好测试一下再用，否则会出现网络中断现象，出现的话，卸载皮肤，退出游戏，重新登录游戏
4.最好下载最近玩家的自制皮肤，不要下载时间距离现在特别久的，有封号风险
5.不想使用插件的话，直接点击退出 X 即可退出
6.手动挂载有风险，最好不用尝试，还是用插件吧
</code></pre><h4 id="官网下载地址"><a href="#官网下载地址" class="headerlink" title="官网下载地址"></a>官网下载地址</h4><p>官方网址：<a href="http://www.cclolcc.com" target="_blank" rel="external">www.cclolcc.com</a><br>支持原创-<a href="http://www.cclolcc.com/thread-40575-1-1.html" target="_blank" rel="external">biubiu</a></p>
<h4 id="重要的事情说三遍"><a href="#重要的事情说三遍" class="headerlink" title="重要的事情说三遍"></a>重要的事情说三遍</h4><p>我只是做个宣传而已，服务大家，如果封号，本人不承担任何责任<br>我只是做个宣传而已，服务大家，如果封号，本人不承担任何责任<br>我只是做个宣传而已，服务大家，如果封号，本人不承担任何责任</p>
]]></content>
      
        <categories>
            
            <category> LOL </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[推荐chm转成html的方法]]></title>
      <url>/2017/09/18/chm%E8%BD%AC%E6%8D%A2%E4%B8%BAhtml/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>你有一个 chm 格式的手册，这是手机上不支持的<br>因此你可以把它转换为html，为了方便自己查看<br>其实我也就是闲的慌，你可以在手机上下载<br>1.chm阅读器<br>2.浏览器<br>就可以直接打开查看了</p>
</blockquote></p>
<p>chm是由一个或一组文件编译成的，可用下述命令反编译：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hh.exe -decompile 反编译后保存的目录 要进行反编译的文件.chm</p>
<pre><code>1、例如，要反编译文件“test.chm”，先进入“cmd”命令窗口
2、并转到“E1.chm”所在目录，输入“hh -decompile test test.chm”
3、会在当前目录下生成目录“test”，并在其中生成原始的目录结构。</code></pre>
<p><code>“hh.exe”是windows自带的，不用下载，直接使用。</code></p>
<p>但是这个方法所呈现的目录结构是非常庞大的，也就是说你的chm的目录有多少，他就会生成多少html，看着特别的恶心<br>如果有好的方法，希望大家联系，告诉我，蟹蟹了<br>如果我发现了其他的方法，也会发在博客里</p>
<p>支持原创-<a href="http://blog.csdn.net/u013047660/article/details/47272535" target="_blank" rel="external">biubiu</a></p>
]]></content>
      
        <categories>
            
            <category> skills </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[JS开发中的一些小技巧和方法]]></title>
      <url>/2017/09/18/%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>一些js中的小代码</p>
</blockquote></p>
<h3 id="生成指定范围内的随机数"><a href="#生成指定范围内的随机数" class="headerlink" title="生成指定范围内的随机数"></a>生成指定范围内的随机数</h3><pre><code>function setRadomNum(mix,max){
    return Math.floor(Math.random() * (max - min + 1)) + min;
}</code></pre>
<h3 id="json转url参数"><a href="#json转url参数" class="headerlink" title="json转url参数"></a>json转url参数</h3><pre><code>function josn2url(json){
    var arr = [];
    for(var name in json){
        arr.push(name + &#39;=&#39; +json[name]);
    }
    return arr.join(&#39;&amp;&#39;);
}</code></pre>
<h3 id="验证是否为数组"><a href="#验证是否为数组" class="headerlink" title="验证是否为数组"></a>验证是否为数组</h3><pre><code>function isArray(obj){
    return Array.isArray(obj) || Object.prototype.toString.call(obj) === &#39;[object Array]&#39;;
}</code></pre>
<h3 id="清空数组"><a href="#清空数组" class="headerlink" title="清空数组"></a>清空数组</h3><pre><code>方法一  将长度设置为0
var arr = [1, 2, 3, 4, 5];
arr.length = 0;

方法二  通过 splice 方法
var arr = [1, 2, 3, 4, 5];
arr.splice(0, arr.length)

方法三   直接清空
var arr = [1, 2, 3, 4, 5];
arr = [];</code></pre>
<h3 id="保留指定小数位"><a href="#保留指定小数位" class="headerlink" title="保留指定小数位"></a>保留指定小数位</h3><pre><code>var num = 3.1415926;
num = num .toFixed(4);  &#x2F;&#x2F;toFixed()方法可把 Number 四舍五入为指定小数位数的数字，括号里面的值取 0-20（包括 0 和 20）
console.log(3.1416)</code></pre>
<h3 id="打乱数组的顺序"><a href="#打乱数组的顺序" class="headerlink" title="打乱数组的顺序"></a>打乱数组的顺序</h3><pre><code>方法一
arr.sort(function(){
    return Math.random() - 0.5
});
方法二
function shuffle(arr){
    var i, j, temp;
    for (i = arr.length - 1; i&gt;0; i--){
        j = Math.floor( Math.random() * (i + 1) );
        temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    retuen arr
}</code></pre>
<h3 id="使用-而不是"><a href="#使用-而不是" class="headerlink" title="使用 === 而不是 =="></a>使用 === 而不是 ==</h3><pre><code>[10] ==  10      &#x2F;&#x2F; 为 true
[10] === 10      &#x2F;&#x2F; 为 false
&#39;10&#39; ==  10      &#x2F;&#x2F; 为 true
&#39;10&#39; === 10      &#x2F;&#x2F; 为 false
 []  ==  0       &#x2F;&#x2F; 为 true
 []  === 0       &#x2F;&#x2F; 为 false
 &#39;&#39;  ==  false   &#x2F;&#x2F; 为 true 但 true == &quot;a&quot; 为false
 &#39;&#39;  === false   &#x2F;&#x2F; 为 false</code></pre>
<h3 id="妙用“-amp-amp-”和“-”"><a href="#妙用“-amp-amp-”和“-”" class="headerlink" title="妙用“&amp;&amp;”和“||”"></a>妙用“&amp;&amp;”和“||”</h3><h4 id="用于赋值"><a href="#用于赋值" class="headerlink" title="用于赋值"></a>用于赋值</h4><pre><code>var attr = true &amp;&amp; 4 &amp;&amp; &quot;aaa&quot;; &#x2F;&#x2F;aaa;
var attr = true &amp;&amp; 0 &amp;&amp; &quot;aaa&quot;; &#x2F;&#x2F;0
var attr = 100 || 12; &#x2F;&#x2F;100
var attr = &quot;e&quot; || &quot;hahaha&quot; &#x2F;&#x2F;&#39;e&#39;
var attr = &quot;&quot; || &quot;hahaha&quot; &#x2F;&#x2F;&#39;hahaha&#39;</code></pre>
<h4 id="用于条件执行语句"><a href="#用于条件执行语句" class="headerlink" title="用于条件执行语句"></a>用于条件执行语句</h4><pre><code>&#x2F;&#x2F; 普通的if语句
if(test){
  isTrue();
}
&#x2F;&#x2F; 上面的语句可以使用 &#39;&amp;&amp;&#39; 写为：
( test &amp;&amp; isTrue() );
test = false;
if(!test){
  isFalse();
}
&#x2F;&#x2F; 上面的语句可以使用 &#39;||&#39; 写为：
( test || isFalse());</code></pre>
<h4 id="用于多次判断后的赋值"><a href="#用于多次判断后的赋值" class="headerlink" title="用于多次判断后的赋值"></a>用于多次判断后的赋值</h4><pre><code>var add_level = 0; 
if(add_step == 5){ 
    add_level = 1; 
} 
else if(add_step == 10){ 
    add_level = 2; 
} 
else if(add_step == 12){ 
    add_level = 3; 
} 
else if(add_step == 15){ 
    add_level = 4; 
} 
else { 
    add_level = 0; 
}
&#x2F;&#x2F;可以写成
var add_level = (add_step==5 &amp;&amp; 1) || (add_step==10 &amp;&amp; 2) || (add_step==12 &amp;&amp; 3) || (add_step==15 &amp;&amp; 4) || 0;</code></pre>
<h3 id="获取数组中的最大值和最小值"><a href="#获取数组中的最大值和最小值" class="headerlink" title="获取数组中的最大值和最小值"></a>获取数组中的最大值和最小值</h3><pre><code>function maxAndMin(arr){
    return {
       max:Math.max.apply(null,arr.join(&#39;,&#39;).split(&#39;,&#39;)),
       min:Math.min.apply(null,arr.join(&#39;,&#39;).split(&#39;,&#39;))
    }
}</code></pre>
<h3 id="从数组中查找指定的值"><a href="#从数组中查找指定的值" class="headerlink" title="从数组中查找指定的值"></a>从数组中查找指定的值</h3><pre><code>function findInArr(arr, value){
	for (var i=0; i&lt;arr.length; i++){
		if (arr[i] == value){
			return true;
		}
	}	
	return false;
}</code></pre>
<h3 id="生成指定长度的随机数字字母字符串"><a href="#生成指定长度的随机数字字母字符串" class="headerlink" title="生成指定长度的随机数字字母字符串"></a>生成指定长度的随机数字字母字符串</h3><pre><code>function getRandomStr(len) {
    var str = &quot;&quot;;
    for( ; str.length &lt; len; str  += Math.random().toString(36).substr(2));
    return  str.substr(0, len);
}</code></pre>
<h3 id="去除字符串的空格"><a href="#去除字符串的空格" class="headerlink" title="去除字符串的空格"></a>去除字符串的空格</h3><h4 id="去除首尾空格"><a href="#去除首尾空格" class="headerlink" title="去除首尾空格"></a>去除首尾空格</h4><pre><code>function trim(str){
    return str.replace(&#x2F;(^\s*)|(\s*$)&#x2F;g, &quot;&quot;);
}
trim(&#39;  hello world    &#39;); &#x2F;&#x2F;&quot;hello world&quot;</code></pre>
<h4 id="去除所有空格"><a href="#去除所有空格" class="headerlink" title="去除所有空格"></a>去除所有空格</h4><pre><code>function trimAll(str){
    return str.replace(&#x2F;\s+&#x2F;g,&quot;&quot;);
}
trimAll(&#39;   he ll o  wo  r ld    &#39;); &#x2F;&#x2F;&quot;helloworld&quot;</code></pre>
<h3 id="将一个连续的字符串转换为分开的整数数组"><a href="#将一个连续的字符串转换为分开的整数数组" class="headerlink" title="将一个连续的字符串转换为分开的整数数组"></a>将一个连续的字符串转换为分开的整数数组</h3><pre><code>function strToNum(s){
    var arr = s.split(&#39;&#39;);
    var arr2 = [];
    for (var i = 0; i &lt; arr.length; i++) {
        arr2.push(parseInt(s[i]));
    }
    return arr2
}
strToNum(&#39;123456&#39;);</code></pre>
<h4 id="计算数组中元素之积并返回一个数组"><a href="#计算数组中元素之积并返回一个数组" class="headerlink" title="计算数组中元素之积并返回一个数组"></a>计算数组中元素之积并返回一个数组</h4><pre><code>var f = function () {
    return x * x;
}
var res = [];
for (var i = 0; i &lt; arr.length; i++) {
    res.push(f(arr[i]))
}
arr.map(String)</code></pre>
<h3 id="map函数"><a href="#map函数" class="headerlink" title="(map函数)"></a>(map函数)</h3><h4 id="将一个字符串数组转换为整数数组（map函数）"><a href="#将一个字符串数组转换为整数数组（map函数）" class="headerlink" title="将一个字符串数组转换为整数数组（map函数）"></a>将一个字符串数组转换为整数数组（map函数）</h4><pre><code>function strArrToNum(arr){
    return arr.map(function (x) { return parseInt(x, 10); })
}
strArrToNum([&#39;1&#39;,&#39;2&#39;,&#39;3&#39;])</code></pre>
<h4 id="将一个英文字符串数组中的每个元素首字母大写（map函数）"><a href="#将一个英文字符串数组中的每个元素首字母大写（map函数）" class="headerlink" title="将一个英文字符串数组中的每个元素首字母大写（map函数）"></a>将一个英文字符串数组中的每个元素首字母大写（map函数）</h4><pre><code>function normalize(arr) {
    function capitalize(x) {
        return x.charAt(0).toUpperCase() + x.slice(1).toLowerCase();
    }
    return arr.map(capitalize);&#x2F;&#x2F;   [&#39;Adam&#39;,&#39;Lisa&#39;,&#39;Bart&#39;]
}
normalize([&#39;adam&#39;, &#39;LISA&#39;, &#39;barT&#39;])</code></pre>
<h4 id="计算数组中元素之积并返回一个数组（map函数）"><a href="#计算数组中元素之积并返回一个数组（map函数）" class="headerlink" title="计算数组中元素之积并返回一个数组（map函数）"></a>计算数组中元素之积并返回一个数组（map函数）</h4><pre><code>function pow(x) {
    return x * x
}
var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
arr.map(pow);&#x2F;&#x2F;   [1,4,9,16,25,36,49,64,81]</code></pre>
<h3 id="（reduce函数）"><a href="#（reduce函数）" class="headerlink" title="（reduce函数）"></a>（reduce函数）</h3><h4 id="计算数组中的元素之和-（reduce函数）"><a href="#计算数组中的元素之和-（reduce函数）" class="headerlink" title="计算数组中的元素之和 （reduce函数）"></a>计算数组中的元素之和 （reduce函数）</h4><pre><code>arr.reduce(function (x, y) {
    return x + y;&#x2F;&#x2F;    15
})
arr = [1,2,3,4,5]</code></pre>
<h4 id="将整数数组转换为一个连续的整数-（reduce函数）"><a href="#将整数数组转换为一个连续的整数-（reduce函数）" class="headerlink" title="将整数数组转换为一个连续的整数  （reduce函数）"></a>将整数数组转换为一个连续的整数  （reduce函数）</h4><pre><code>arr.reduce(function (x, y) {
    return x * 10 + y;&#x2F;&#x2F;    12345
})
arr = [1,2,3,4,5]</code></pre>
<h3 id="（filter函数）"><a href="#（filter函数）" class="headerlink" title="（filter函数）"></a>（filter函数）</h3><h4 id="去除数组中的偶数，保留奇数"><a href="#去除数组中的偶数，保留奇数" class="headerlink" title="去除数组中的偶数，保留奇数"></a>去除数组中的偶数，保留奇数</h4><pre><code>var arr = [1, 2, 4, 5, 6, 9, 10, 15];
var r = arr.filter(function (x) {
    return x % 2 != 0;&#x2F;&#x2F;     [1,5,9,15]
})</code></pre>
<h4 id="去除数组中的空白字符"><a href="#去除数组中的空白字符" class="headerlink" title="去除数组中的空白字符"></a>去除数组中的空白字符</h4><pre><code>var arr = [&#39;A&#39;, &#39;&#39;, &#39;B&#39;, null, undefined, &#39;C&#39;, &#39;  &#39;];
var r = arr.filter(function (s) {
    return s &amp;&amp; s.trim(); &#x2F;&#x2F;    [&#39;A&#39;,&#39;B&#39;,&#39;C&#39;]
})</code></pre>
<h4 id="去除数组中的重复元素"><a href="#去除数组中的重复元素" class="headerlink" title="去除数组中的重复元素"></a>去除数组中的重复元素</h4><pre><code>var arr = [&#39;apple&#39;, &#39;strawberry&#39;, &#39;banana&#39;, &#39;pear&#39;, &#39;apple&#39;, &#39;orange&#39;, &#39;orange&#39;, &#39;strawberry&#39;];
var r = arr.filter(function (element, index, self) {
    return self.indexOf(element) === index;
})</code></pre>
<h4 id="获取1-100数组中的素数"><a href="#获取1-100数组中的素数" class="headerlink" title="获取1-100数组中的素数"></a>获取1-100数组中的素数</h4><pre><code>&#x2F;&#x2F;创建1-100的数组
var x,arr=[];
for(x=1;x&lt;=100;x++){
    arr.push(x);
}
&#x2F;&#x2F;获取素数
function get_primes(arr){
    return arr.filter(function(y){
        if (y == 1) {
            return false;
        }
        for(var i=2;i&lt;=Math.sqrt(y);i++){
            if (y%i == 0){
                return false;
            }
        }
        return true;
    });
}
&#x2F;&#x2F;测试结果：
r = get_primes(arr);
if (r.toString() == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97].toString()) {
    alert(&#39;测试通过！&#39;);
} else {
    alert(&#39;测试不通过！&#39;+ r.toString());
}</code></pre>
<h3 id="（sort函数）"><a href="#（sort函数）" class="headerlink" title="（sort函数）"></a>（sort函数）</h3><h4 id="对数组中的数字排序（默认按照ASCll大小排序）"><a href="#对数组中的数字排序（默认按照ASCll大小排序）" class="headerlink" title="对数组中的数字排序（默认按照ASCll大小排序）"></a>对数组中的数字排序（默认按照ASCll大小排序）</h4><pre><code>var arr = [20, 5, 10, 1, 3]
arr.sort(function (x, y) {
    if (x &gt; y) {
        return -1;
    }
    if (x &lt; y) {
        return 1;
    }
    return 0;
})&#x2F;&#x2F;   [1,3,5,10,20]</code></pre>
<p>—-会直接对数组进行修改</p>
<p><code>未完待续...</code></p>
]]></content>
      
        <categories>
            
            <category> JS </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo使用方法]]></title>
      <url>/2017/09/15/hexo%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a></p>
<blockquote><p>百度，你可以搜索到一大堆，我这就不详细说了<br>毕竟我还是喜欢<a href="http://www.baidu.com" target="_blank" rel="external">搬砖</a>，哈哈哈<br>这个博客地址是我面前见到的最为详细的吧，<a href="http://blog.csdn.net/lemonxq/article/details/72676005" target="_blank" rel="external">直接飞</a><br>说个悄悄话，万一哪天它垮了，我在给大家总结吧<br>就是这么懒！</p>
</blockquote>
<p>再给大家推荐两款最火爆的主题<a href="http://www.baidu.com" target="_blank" rel="external">Material</a>，<a href="http://www.baidu.com" target="_blank" rel="external">NexT</a>的使用文档地址，配置什么的都讲得非常详细</p>
<blockquote><p>骗人，这不是最火爆的，我的才是</p>
</blockquote>
<pre><code>呃呃呃，遇到这种情况我也特别尴尬，加个“我认为”
</code></pre><h5 id="第二款主题用的人特别多，所以特殊点么，我就不用了，我用的是第一款的"><a href="#第二款主题用的人特别多，所以特殊点么，我就不用了，我用的是第一款的" class="headerlink" title="第二款主题用的人特别多，所以特殊点么，我就不用了，我用的是第一款的"></a>第二款主题用的人特别多，所以特殊点么，我就不用了，我用的是第一款的</h5>]]></content>
      
        <categories>
            
            <category> HEXO </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[第一篇博客的诞生]]></title>
      <url>/2017/09/14/%E6%B5%8B%E8%AF%95/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a><br><blockquote><p>哇哇哇，很早以前就开始看博客，老想着可以写自己的博客，那会真的….反正就是有很多话想说吧，但是现在呢？我是真的不知道该说什么呀。所以呢，第一篇还是就这么过去吧！！！<br>最主要的是上班时间，在我们老板的眼皮子底下写的，感觉好对不起我老板，                          ———–才怪！！！</p>
</blockquote></p>
<h3 id="引言-他有四个参数"><a href="#引言-他有四个参数" class="headerlink" title="引言  他有四个参数"></a>引言  他有四个参数</h3><pre><code>{% blockquote [author[, source]] [link] [source_link_title] %}
content
{% endblockquote %}
</code></pre><h4 id="不设置参数的话-他是这样的"><a href="#不设置参数的话-他是这样的" class="headerlink" title="不设置参数的话,他是这样的"></a>不设置参数的话,他是这样的</h4><pre><code>{% blockquote [author[, source]] [link] [source_link_title] %}
传说中的引言，可包含作者，来源和标题
话说我也不知道啥
其实这些不是特别重要的啦
只需要知道他们的样式就可以了
需要的时候再用
{% endblockquote %}
</code></pre><blockquote><p>传说中的引言，可包含作者，来源和标题<br>话说我也不知道啥<br>只需要知道他的样式就可以了<br>需要的时候再用</p>
</blockquote>
<h4 id="设置参数的话-他还是这样的"><a href="#设置参数的话-他还是这样的" class="headerlink" title="设置参数的话,他还是这样的"></a>设置参数的话,他还是这样的</h4><h4 id="引用书上的句子"><a href="#引用书上的句子" class="headerlink" title="引用书上的句子"></a>引用书上的句子</h4><pre><code>{% blockquote David Levithan, Wide Awake %}
Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.
{% endblockquote %}
</code></pre><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>
<h4 id="引用-Twitter"><a href="#引用-Twitter" class="headerlink" title="引用 Twitter"></a>引用 Twitter</h4><pre><code>{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}
NEW: DevDocs now comes with syntax highlighting. http://devdocs.io
{% endblockquote %}
</code></pre><h4 id="引用网络上的文章"><a href="#引用网络上的文章" class="headerlink" title="引用网络上的文章"></a>引用网络上的文章</h4><pre><code>{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}
Every interaction is both precious and an opportunity to delight.
{% endblockquote %}
</code></pre><h3 id="插入代码块-code"><a href="#插入代码块-code" class="headerlink" title="插入代码块 code"></a>插入代码块 code</h3><h4 id="普通的代码块"><a href="#普通的代码块" class="headerlink" title="普通的代码块"></a>普通的代码块</h4><pre><code>{% codeblock %}
alert('Hello World!');
{% endcodeblock %}
</code></pre><h4 id="指定语言"><a href="#指定语言" class="headerlink" title="指定语言"></a>指定语言</h4><pre><code>{% codeblock lang:objc %}
[rectangle setX: 10 y: 10 width: 20 height: 20];
{% endcodeblock %}
</code></pre><h4 id="附加说明"><a href="#附加说明" class="headerlink" title="附加说明"></a>附加说明</h4><pre><code>{% codeblock Array.map %}
array.map(callback[, thisArg])
{% endcodeblock %}
</code></pre><h4 id="附加说明和网址"><a href="#附加说明和网址" class="headerlink" title="附加说明和网址"></a>附加说明和网址</h4><pre><code>{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}
_.compact([0, 1, false, 2, '', 3]);
=> [1, 2, 3]
{% endcodeblock %}
</code></pre><h4 id="反引号代码块"><a href="#反引号代码块" class="headerlink" title="反引号代码块"></a>反引号代码块</h4><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。<br><code>[language] [title] [url] [link text] code snippet</code></p>
<h3 id="拉引"><a href="#拉引" class="headerlink" title="拉引"></a>拉引</h3><pre><code>{% pullquote [class] %}
content
{% endpullquote %}
</code></pre><h3 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h3><pre><code>&lt;!-- {% jsfiddle shorttag [tabs] [skin] [width] [height] %} --&gt;
</code></pre><h3 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h3><pre><code>{% gist gist_id [filename] %}
</code></pre><h3 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h3><pre><code>{% iframe url [width] [height] %}
</code></pre><h3 id="插入一张图片"><a href="#插入一张图片" class="headerlink" title="插入一张图片"></a>插入一张图片</h3><pre><code>{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}
</code></pre><h3 id="插入一个链接"><a href="#插入一个链接" class="headerlink" title="插入一个链接"></a>插入一个链接</h3><pre><code>{% link text url [external] [title] %}
</code></pre><h3 id="插入-source-文件夹内的代码文件"><a href="#插入-source-文件夹内的代码文件" class="headerlink" title="插入 source 文件夹内的代码文件"></a>插入 source 文件夹内的代码文件</h3><pre><code>{% include_code [title] [lang:language] path/to/file %}
</code></pre><h3 id="插入一个Youtube视频"><a href="#插入一个Youtube视频" class="headerlink" title="插入一个Youtube视频"></a>插入一个Youtube视频</h3><pre><code>{% youtube video_id %}
</code></pre><h3 id="插入一个Vimeo视频"><a href="#插入一个Vimeo视频" class="headerlink" title="插入一个Vimeo视频"></a>插入一个Vimeo视频</h3><pre><code>{% vimeo video_id %}
</code></pre><h3 id="引用其他文章的链接"><a href="#引用其他文章的链接" class="headerlink" title="引用其他文章的链接"></a>引用其他文章的链接</h3><pre><code>{% post_path slug %}
{% post_link slug [title] %}
</code></pre><h3 id="引用文章的资源"><a href="#引用文章的资源" class="headerlink" title="引用文章的资源"></a>引用文章的资源</h3><pre><code>{% asset_path slug %}
{% asset_img slug [title] %}
{% asset_link slug [title] %}
</code></pre><h3 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h3><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p>
<pre><code>{% raw %}
content
{% endraw %}
</code></pre><h3 id="这两个得需要插件的支持"><a href="#这两个得需要插件的支持" class="headerlink" title="这两个得需要插件的支持"></a>这两个得需要插件的支持</h3><h4 id="插入bilbi视频"><a href="#插入bilbi视频" class="headerlink" title="插入bilbi视频"></a>插入bilbi视频</h4><pre><code>{％bilibili video_id 3％}
</code></pre><a href="https://hexo.io/zh-cn/docs/tag-plugins.html" title="[HEXO] [标签]" target="_blank" rel="external">具体请查看官方文档</a>
]]></content>
      
        <categories>
            
            <category> 自言自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo入门]]></title>
      <url>/2017/09/11/hello-world/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https:xin-LianK.github.io" target="_blank" rel="external">我的博客</a></p>
<p>其实我就是做个大概翻译工作的了，本来可以删的，但是觉得这个系统的默认第一遍文章还是挺好看的，于是我还是决定留着了吧，做个简概的翻译工作。<br>这个其实就是<a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>!的最最入门的教程吧！类似于环境的搭建！这就是他的官文<a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a>的地址 如果你遇到困难的话，你可以在这找到答案<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> 或者你还可以直接到 <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>寻求官方人士的解答，但是不知道会不会有人回应呢。</p>
<blockquote><p>以下代码都在cmd控制器中执行<br>什么？你不知道cmd是啥<br>快捷键 win + R 输入cmd 你就可以看到了</p>
</blockquote>
<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="创建一个hexo文件档"><a href="#创建一个hexo文件档" class="headerlink" title="创建一个hexo文件档"></a>创建一个hexo文件档</h3><p>就是类似于angular cli那样的，给你生成一大堆的配置文件，是不是可以理解为：<br>你写一个就可以自动生成好几个的，反正我就是这么理解的</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>想了解更多的话就杀过去: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">write</a><br>这个是英文的，你还可以选择中文的：<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">写文章</a></p>
<h3 id="当你配置好的话，就需要运行了"><a href="#当你配置好的话，就需要运行了" class="headerlink" title="当你配置好的话，就需要运行了"></a>当你配置好的话，就需要运行了</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>想了解更多的话就杀过去: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a><br>这个是英文的，你还可以选择中文的：<a href="https://hexo.io/zh-cn/docs/server.html" target="_blank" rel="external">服务</a></p>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>想了解更多的话就杀过去: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a><br>这个是英文的，你还可以选择中文的：<a href="https://hexo.io/zh-cn/docs/generating.html" target="_blank" rel="external">部署</a></p>
<h3 id="发布到你的gihub中"><a href="#发布到你的gihub中" class="headerlink" title="发布到你的gihub中"></a>发布到你的gihub中</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo clean
$ hexo deploy
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这里多加一条命令 clean 为的就是发布的时候可以把不需要的文件不会发布</p>
<p>想了解更多的话就杀过去: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a><br>这个是英文的，你还可以选择中文的：<a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="external">发布</a></p>
]]></content>
      
        <categories>
            
            <category> HEXO </category>
            
        </categories>
        
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[links]]></title>
      <url>/links/index.html</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[timeline]]></title>
      <url>/timeline/index.html</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>dsadsa<br>sa<br>dsad<br>asdsad<br>ad</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[gallery]]></title>
      <url>/gallery/index.html</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
    </entry>
    
  
</search>
